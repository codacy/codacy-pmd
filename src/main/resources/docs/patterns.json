{
  "name" : "pmd",
  "version" : "6.0.1",
  "patterns" : [ {
    "patternId" : "category_jsp_security_NoUnsanitizedJSPExpression",
    "level" : "Error",
    "category" : "Security",
    "languages" : [ "jsp" ]
  }, {
    "patternId" : "category_java_performance_RedundantFieldInitializer",
    "level" : "Warning",
    "category" : "Performance",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_design_ClassWithOnlyPrivateConstructorsShouldBeFinal",
    "level" : "Warning",
    "category" : "ErrorProne",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\nTypeDeclaration[count(../TypeDeclaration) = 1]/ClassOrInterfaceDeclaration\n[@Final = 'false']\n[count(./ClassOrInterfaceBody/ClassOrInterfaceBodyDeclaration/ConstructorDeclaration[@Private = 'true']) >= 1 ]\n[count(./ClassOrInterfaceBody/ClassOrInterfaceBodyDeclaration/ConstructorDeclaration[(@Public = 'true') or (@Protected = 'true') or (@PackagePrivate = 'true')]) = 0 ]\n[not(.//ClassOrInterfaceDeclaration)]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_ShortMethodName",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "minimum",
      "default" : "3"
    }, {
      "name" : "xpath",
      "default" : "\n\n//MethodDeclarator[string-length(@Image) < $minimum]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_plsql_design_ExcessivePackageSpecificationLength",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "plsql" ]
  }, {
    "patternId" : "category_apex_codestyle_IfStmtsMustUseBraces",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//IfBlockStatement/BlockStatement[@CurlyBrace='false']\n\n                "
    } ],
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_apex_security_ApexCSRF",
    "level" : "Error",
    "category" : "Security",
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_ecmascript_bestpractices_AvoidWithStatement",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//WithStatement\n\n                "
    } ],
    "languages" : [ "javascript" ]
  }, {
    "patternId" : "category_java_bestpractices_JUnitAssertionsShouldIncludeMessage",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_UnconditionalIfStatement",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n \n//IfStatement/Expression\n [count(PrimaryExpression)=1]\n /PrimaryExpression/PrimaryPrefix/Literal/BooleanLiteral\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_SingletonClassReturningNewInstance",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_plsql_design_TooManyMethods",
    "level" : "Warning",
    "category" : "ErrorProne",
    "parameters" : [ {
      "name" : "maxmethods",
      "default" : "1"
    }, {
      "name" : "xpath",
      "default" : "\n\n//node()\n     [ (\n        local-name(.) = 'PackageSpecification'\n        or\n        local-name(.) = 'TypeSpecification'\n       )\n       and \n      (\n      count(/descendant::ProgramUnit[\n                                         not (\n                                                starts-with(@Image,'get')\n                                                or\n                                                starts-with(@Image,'set')\n                                                or\n                                                starts-with(@Image,'is')\n                                            )\n                                       ]\n           )\n      +\n      count(/descendant::TypeMethod[\n                                         not (\n                                                starts-with(@Image,'get')\n                                                or\n                                                starts-with(@Image,'set')\n                                                or\n                                                starts-with(@Image,'is')\n                                            )\n                                       ]\n           )\n      ) > $maxmethods\n     ]\n\n                "
    } ],
    "languages" : [ "plsql" ]
  }, {
    "patternId" : "category_java_bestpractices_AvoidPrintStackTrace",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//PrimaryExpression\n [PrimaryPrefix/Name[contains(@Image,'printStackTrace')]]\n [PrimarySuffix[not(boolean(Arguments/ArgumentList/Expression))]]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_ecmascript_bestpractices_ConsistentReturn",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "javascript" ]
  }, {
    "patternId" : "category_java_performance_TooFewBranchesForASwitchStatement",
    "level" : "Warning",
    "category" : "Performance",
    "parameters" : [ {
      "name" : "minimumNumberCaseForASwitch",
      "default" : "3"
    }, {
      "name" : "xpath",
      "default" : "\n\n//SwitchStatement[\n    (count(.//SwitchLabel) < $minimumNumberCaseForASwitch)\n]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_bestpractices_UnusedLocalVariable",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_apex_performance_AvoidSoslInLoops",
    "level" : "Warning",
    "category" : "Performance",
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_plsql_design_NPathComplexity",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "plsql" ]
  }, {
    "patternId" : "category_java_errorprone_EmptyStatementNotInLoop",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//EmptyStatement\n [not(\n       ../../../ForStatement\n       or ../../../WhileStatement\n       or ../../../BlockStatement/ClassOrInterfaceDeclaration\n       or ../../../../../../ForStatement/Statement[1]\n        /Block[1]/BlockStatement[1]/Statement/EmptyStatement\n       or ../../../../../../WhileStatement/Statement[1]\n        /Block[1]/BlockStatement[1]/Statement/EmptyStatement)\n ]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_plsql_design_NcssObjectCount",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "plsql" ]
  }, {
    "patternId" : "category_ecmascript_codestyle_AssignmentInOperand",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "allowTernary",
      "default" : "false"
    }, {
      "name" : "allowWhile",
      "default" : "false"
    }, {
      "name" : "allowTernaryResults",
      "default" : "false"
    }, {
      "name" : "allowIf",
      "default" : "false"
    }, {
      "name" : "allowFor",
      "default" : "false"
    }, {
      "name" : "xpath",
      "default" : "\n\n    //IfStatement[$allowIf = \"false\"]/child::node()[1]/descendant-or-self::node()[self::Assignment or self::UnaryExpression[$allowIncrementDecrement = \"false\" and (@Image = \"--\" or @Image = \"++\")]]\n|\n    //WhileLoop[$allowWhile = \"false\"]/child::node()[1]/descendant-or-self::node()[self::Assignment or self::UnaryExpression[$allowIncrementDecrement = \"false\" and (@Image = \"--\" or @Image = \"++\")]]\n|\n    //DoLoop[$allowWhile = \"false\"]/child::node()[2]/descendant-or-self::node()[self::Assignment or self::UnaryExpression[$allowIncrementDecrement = \"false\" and (@Image = \"--\" or @Image = \"++\")]]\n|\n    //ForLoop[$allowFor = \"false\"]/child::node()[2]/descendant-or-self::node()[self::Assignment or self::UnaryExpression[$allowIncrementDecrement = \"false\" and (@Image = \"--\" or @Image = \"++\")]]\n|\n   //ConditionalExpression[$allowTernary = \"false\"]/child::node()[1]/descendant-or-self::node()[self::Assignment or self::UnaryExpression[$allowIncrementDecrement = \"false\" and (@Image = \"--\" or @Image = \"++\")]]\n|\n   //ConditionalExpression[$allowTernaryResults = \"false\"]/child::node()[position() = 2 or position() = 3]/descendant-or-self::node()[self::Assignment or self::UnaryExpression[$allowIncrementDecrement = \"false\" and (@Image = \"--\" or @Image = \"++\")]]\n\n                "
    }, {
      "name" : "allowIncrementDecrement",
      "default" : "false"
    } ],
    "languages" : [ "javascript" ]
  }, {
    "patternId" : "category_java_documentation_CommentContent",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_performance_OptimizableToArrayCall",
    "level" : "Warning",
    "category" : "Performance",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//PrimaryExpression\n[PrimaryPrefix/Name[ends-with(@Image, 'toArray')]]\n[\nPrimarySuffix/Arguments/ArgumentList/Expression\n /PrimaryExpression/PrimaryPrefix/AllocationExpression\n /ArrayDimsAndInits/Expression/PrimaryExpression/PrimaryPrefix[not(Literal[@Image='0'])]\n]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_design_AvoidCatchingGenericException",
    "level" : "Warning",
    "category" : "ErrorProne",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//CatchStatement/FormalParameter/Type/ReferenceType/ClassOrInterfaceType[\n    @Image='NullPointerException' or\n    @Image='Exception' or\n    @Image='RuntimeException']\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_bestpractices_AccessorClassGeneration",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_BrokenNullCheck",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_multithreading_DoNotUseThreads",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "//ClassOrInterfaceType[@Image = 'Thread' or @Image = 'Runnable']"
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_apex_design_TooManyFields",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_java_errorprone_SuspiciousHashcodeMethodName",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_JUnitSpelling",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//MethodDeclarator[(not(@Image = 'setUp')\n and translate(@Image, 'SETuP', 'setUp') = 'setUp')\n or (not(@Image = 'tearDown')\n and translate(@Image, 'TEARdOWN', 'tearDown') = 'tearDown')]\n [FormalParameters[count(*) = 0]]\n[ancestor::ClassOrInterfaceDeclaration[//ClassOrInterfaceType[pmd-java:typeof(@Image, 'junit.framework.TestCase','TestCase')] or //MarkerAnnotation/Name[pmd-java:typeof(@Image, 'org.junit.Test', 'Test')]]]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_FinalizeOnlyCallsSuperFinalize",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//MethodDeclaration[MethodDeclarator[@Image=\"finalize\"][not(FormalParameters/*)]]\n   /Block[count(BlockStatement)=1]\n     /BlockStatement[\n       Statement/StatementExpression/PrimaryExpression\n       [./PrimaryPrefix[@SuperModifier='true']]\n       [./PrimarySuffix[@Image='finalize']]\n     ]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_UnnecessaryCaseChange",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_NonStaticInitializer",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//Initializer[@Static='false']\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_UseEqualsToCompareStrings",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//EqualityExpression/PrimaryExpression\n[(PrimaryPrefix/Literal\n   [starts-with(@Image, '\"')]\n   [ends-with(@Image, '\"')]\nand count(PrimarySuffix) = 0)]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_design_ExcessiveMethodLength",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_FieldDeclarationsShouldBeAtStartOfClass",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_StaticEJBFieldShouldBeFinal",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ClassOrInterfaceDeclaration[\n    (\n    (./ImplementsList/ClassOrInterfaceType[ends-with(@Image,'SessionBean')])\n    or\n    (./ImplementsList/ClassOrInterfaceType[ends-with(@Image,'EJBHome')])\n    or\n    (./ImplementsList/ClassOrInterfaceType[ends-with(@Image,'EJBLocalObject')])\n    or\n    (./ImplementsList/ClassOrInterfaceType[ends-with(@Image,'EJBLocalHome')])\n    or\n    (./ExtendsList/ClassOrInterfaceType[ends-with(@Image,'EJBObject')])\n    )\n    and\n    (./ClassOrInterfaceBody/ClassOrInterfaceBodyDeclaration[\n         (./FieldDeclaration[@Static = 'true'])\n         and\n         (./FieldDeclaration[@Final = 'false'])\n    ])\n]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_plsql_design_NcssMethodCount",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "plsql" ]
  }, {
    "patternId" : "category_java_design_LawOfDemeter",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_bestpractices_JUnitTestsShouldIncludeAssert",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_bestpractices_OneDeclarationPerLine",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//LocalVariableDeclaration\n   [count(VariableDeclarator) > 1]\n   [$strictMode or count(distinct-values(VariableDeclarator/@BeginLine)) != count(VariableDeclarator)]\n\n                "
    }, {
      "name" : "strictMode",
      "default" : "false"
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_pom_errorprone_InvalidDependencyTypes",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//dependencyManagement/dependency/type/text[not(contains('pom, jar, maven-plugin, ejb, war, ear, rar, par',@Image))]\n\n                "
    } ],
    "languages" : [ "xml" ]
  }, {
    "patternId" : "category_apex_design_NcssConstructorCount",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_ecmascript_errorprone_InnaccurateNumericLiteral",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//NumberLiteral[\n    @Image != @Number\n    and translate(@Image, \"e\", \"E\") != @Number\n    and concat(@Image, \".0\") != @Number\n    and @Image != substring-before(translate(@Number, \".\", \"\"), \"E\")]\n\n                "
    } ],
    "languages" : [ "javascript" ]
  }, {
    "patternId" : "category_vm_bestpractices_UnusedMacroParameter",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "velocity" ]
  }, {
    "patternId" : "category_java_bestpractices_SystemPrintln",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//Name[\n    starts-with(@Image, 'System.out.print')\n    or\n    starts-with(@Image, 'System.err.print')\n    ]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_apex_codestyle_VariableNamingConventions",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_java_errorprone_EmptySwitchStatements",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "//SwitchStatement[count(*) = 1]"
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_EmptyMethodInAbstractClassShouldBeAbstract",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ClassOrInterfaceDeclaration[@Abstract = 'true']\n    /ClassOrInterfaceBody\n    /ClassOrInterfaceBodyDeclaration\n    /MethodDeclaration[@Abstract = 'false' and @Native = 'false']\n    [\n        ( boolean(./Block[count(./BlockStatement) =  1]/BlockStatement/Statement/ReturnStatement/Expression/PrimaryExpression/PrimaryPrefix/Literal/NullLiteral) = 'true' )\n        or\n        ( boolean(./Block[count(./BlockStatement) =  1]/BlockStatement/Statement/ReturnStatement/Expression/PrimaryExpression/PrimaryPrefix/Literal[@Image = '0']) = 'true' )\n        or\n        ( boolean(./Block[count(./BlockStatement) =  1]/BlockStatement/Statement/ReturnStatement/Expression/PrimaryExpression/PrimaryPrefix/Literal[string-length(@Image) = 2]) = 'true' )\n        or\n        (./Block[count(./BlockStatement) =  1]/BlockStatement/Statement/EmptyStatement)\n        or\n        ( count (./Block/*) = 0 )\n    ]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_EmptyTryBlock",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//TryStatement[not(ResourceSpecification)]/Block[1][count(*) = 0]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_vf_security_VfCsrf",
    "level" : "Error",
    "category" : "Security",
    "languages" : [ "visualforce" ]
  }, {
    "patternId" : "category_java_multithreading_DoubleCheckedLocking",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_EmptySynchronizedBlock",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "//SynchronizedStatement/Block[1][count(*) = 0]"
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_MethodArgumentCouldBeFinal",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_bestpractices_PreserveStackTrace",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_multithreading_NonThreadSafeSingleton",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_design_AvoidRethrowingException",
    "level" : "Warning",
    "category" : "ErrorProne",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//CatchStatement[FormalParameter\n /VariableDeclaratorId/@Image = Block/BlockStatement/Statement\n /ThrowStatement/Expression/PrimaryExpression[count(PrimarySuffix)=0]/PrimaryPrefix/Name/@Image\n and count(Block/BlockStatement/Statement) =1]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_bestpractices_JUnitTestContainsTooManyAsserts",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "maximumAsserts",
      "default" : "1"
    }, {
      "name" : "xpath",
      "default" : "\n\n//MethodDeclarator[(@Image[fn:matches(.,'^test')] or ../../Annotation/MarkerAnnotation/Name[@Image='Test']) and count(..//PrimaryPrefix/Name[@Image[fn:matches(.,'^assert')]]) > $maximumAsserts]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_bestpractices_ArrayIsStoredDirectly",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_AvoidCallingFinalize",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_design_LogicInversion",
    "level" : "Warning",
    "category" : "ErrorProne",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//UnaryExpressionNotPlusMinus[@Image='!']/PrimaryExpression/PrimaryPrefix/Expression[EqualityExpression or RelationalExpression]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_performance_ByteInstantiation",
    "level" : "Warning",
    "category" : "Performance",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//PrimaryPrefix/AllocationExpression\n[not (ArrayDimsAndInits)\nand (ClassOrInterfaceType/@Image='Byte'\nor ClassOrInterfaceType/@Image='java.lang.Byte')]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_apex_performance_AvoidDmlStatementsInLoops",
    "level" : "Warning",
    "category" : "Performance",
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_apex_security_ApexSharingViolations",
    "level" : "Error",
    "category" : "Security",
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_plsql_design_ExcessiveTypeLength",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "plsql" ]
  }, {
    "patternId" : "category_java_design_UseUtilityClass",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_LocalHomeNamingConvention",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ClassOrInterfaceDeclaration\n[\n    (\n        (./ExtendsList/ClassOrInterfaceType[ends-with(@Image,'EJBLocalHome')])\n    )\n    and\n    not\n    (\n        ends-with(@Image,'LocalHome')\n    )\n]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_EmptyStatementBlock",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "//BlockStatement/Statement/Block[count(*) = 0]"
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_jsp_design_NoInlineStyleInformation",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "jsp" ]
  }, {
    "patternId" : "category_java_errorprone_OverrideBothEqualsAndHashcode",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_AbstractNaming",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ClassOrInterfaceDeclaration\n [@Abstract='true' and @Interface='false']\n [not (starts-with(@Image,'Abstract'))]\n|\n//ClassOrInterfaceDeclaration\n [@Abstract='false']\n [$strict='true']\n [starts-with(@Image, 'Abstract')]\n\n                "
    }, {
      "name" : "strict",
      "default" : "true"
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_vm_design_AvoidDeeplyNestedIfStmts",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "velocity" ]
  }, {
    "patternId" : "category_java_bestpractices_UseAssertEqualsInsteadOfAssertTrue",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//PrimaryExpression[\n    PrimaryPrefix/Name[@Image = 'assertTrue']\n][\n    PrimarySuffix/Arguments/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix/Name\n    [ends-with(@Image, '.equals')]\n]\n[ancestor::ClassOrInterfaceDeclaration[//ClassOrInterfaceType[pmd-java:typeof(@Image, 'junit.framework.TestCase','TestCase')] or //MarkerAnnotation/Name[pmd-java:typeof(@Image, 'org.junit.Test', 'Test')]]]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_CloneThrowsCloneNotSupportedException",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//MethodDeclaration\n[\nMethodDeclarator/@Image = 'clone'\nand count(MethodDeclarator/FormalParameters/*) = 0\nand count(NameList/Name[contains\n(@Image,'CloneNotSupportedException')]) = 0\n]\n[\n../../../../ClassOrInterfaceDeclaration[@Final = 'false']\n]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_jsp_design_NoInlineScript",
    "level" : "Warning",
    "category" : "ErrorProne",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//HtmlScript[@Image != '']\n\n                "
    } ],
    "languages" : [ "jsp" ]
  }, {
    "patternId" : "category_java_performance_UseStringBufferForStringAppends",
    "level" : "Warning",
    "category" : "Performance",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_CheckSkipResult",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_performance_AvoidArrayLoops",
    "level" : "Warning",
    "category" : "Performance",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//Statement[(ForStatement or WhileStatement) and\ncount(*//AssignmentOperator[@Image = '='])=1\nand\n*/Statement\n[\n./Block/BlockStatement/Statement/StatementExpression/PrimaryExpression\n/PrimaryPrefix/Name/../../PrimarySuffix/Expression\n[(PrimaryExpression or AdditiveExpression) and count\n(.//PrimaryPrefix/Name)=1]//PrimaryPrefix/Name/@Image\nand\n./Block/BlockStatement/Statement/StatementExpression/Expression/PrimaryExpression\n/PrimaryPrefix/Name/../../PrimarySuffix[count\n(..//PrimarySuffix)=1]/Expression[(PrimaryExpression\nor AdditiveExpression) and count(.//PrimaryPrefix/Name)=1]\n//PrimaryPrefix/Name/@Image\n]]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_EmptyCatchBlock",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//CatchStatement\n [count(Block/BlockStatement) = 0 and ($allowCommentedBlocks != 'true' or Block/@containsComment = 'false')]\n [FormalParameter/Type/ReferenceType\n   /ClassOrInterfaceType[@Image != 'InterruptedException' and @Image != 'CloneNotSupportedException']\n ]\n [FormalParameter/VariableDeclaratorId[not(matches(@Image, $allowExceptionNameRegex))]]\n\n                "
    }, {
      "name" : "allowCommentedBlocks",
      "default" : "false"
    }, {
      "name" : "allowExceptionNameRegex",
      "default" : "^(ignored|expected)$"
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_apex_security_ApexDangerousMethods",
    "level" : "Error",
    "category" : "Security",
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_java_codestyle_AvoidPrefixingMethodParameters",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//MethodDeclaration/MethodDeclarator/FormalParameters/FormalParameter/VariableDeclaratorId[\n        pmd:matches(@Image,'^in[A-Z].*','^out[A-Z].*','^in$','^out$')\n]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_DontUseFloatTypeForLoopIndices",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ForStatement/ForInit/LocalVariableDeclaration\n/Type/PrimitiveType[@Image=\"float\"]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_design_SimplifyBooleanExpressions",
    "level" : "Warning",
    "category" : "ErrorProne",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//EqualityExpression/PrimaryExpression\n /PrimaryPrefix/Literal/BooleanLiteral\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_WhileLoopsMustUseBraces",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "//WhileStatement[not(Statement/Block)]"
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_multithreading_UseConcurrentHashMap",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//Type[../VariableDeclarator/VariableInitializer//AllocationExpression/ClassOrInterfaceType[@Image != 'ConcurrentHashMap']]\n/ReferenceType/ClassOrInterfaceType[@Image = 'Map']\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_plsql_design_ExcessiveParameterList",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "plsql" ]
  }, {
    "patternId" : "category_java_errorprone_CallSuperLast",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//MethodDeclaration[MethodDeclarator[\n  @Image='finish' or\n  @Image='onDestroy' or\n  @Image='onPause' or\n  @Image='onSaveInstanceState' or\n  @Image='onStop' or\n  @Image='onTerminate'\n  ]]\n   /Block/BlockStatement[last()]\n    [not(Statement/StatementExpression/PrimaryExpression[./PrimaryPrefix[@SuperModifier='true']]/PrimarySuffix[@Image= ancestor::MethodDeclaration/MethodDeclarator/@Image])]\n[ancestor::ClassOrInterfaceDeclaration[ExtendsList/ClassOrInterfaceType[\n  typeof(@Image, 'android.app.Activity', 'Activity') or\n  typeof(@Image, 'android.app.Application', 'Application') or\n  typeof(@Image, 'android.app.Service', 'Service')\n]]]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_performance_AvoidUsingShortType",
    "level" : "Warning",
    "category" : "Performance",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//PrimitiveType[@Image = 'short'][name(../..) != 'CastExpression']\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_apex_security_ApexBadCrypto",
    "level" : "Error",
    "category" : "Security",
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_vf_security_VfUnescapeEl",
    "level" : "Error",
    "category" : "Security",
    "languages" : [ "visualforce" ]
  }, {
    "patternId" : "category_java_bestpractices_MethodReturnsInternalArray",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_SuspiciousOctalEscape",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_design_ExceptionAsFlowControl",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_AvoidCatchingNPE",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//CatchStatement/FormalParameter/Type\n /ReferenceType/ClassOrInterfaceType[@Image='NullPointerException']\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_CloseResource",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_ecmascript_bestpractices_UseBaseWithParseInt",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//FunctionCall/Name[\n     @Image = 'parseInt'\n     and\n     count(../*) < 3\n]\n\n                "
    } ],
    "languages" : [ "javascript" ]
  }, {
    "patternId" : "category_java_performance_AddEmptyString",
    "level" : "Warning",
    "category" : "Performance",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n \n//AdditiveExpression/PrimaryExpression/PrimaryPrefix/Literal[@Image='\"\"']\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_PrematureDeclaration",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_BadComparison",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//EqualityExpression[@Image='==']\n /PrimaryExpression/PrimaryPrefix\n /Name[@Image='Double.NaN' or @Image='Float.NaN']\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_CloneMethodMustBePublic",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//MethodDeclaration[@Public='false']\n  [MethodDeclarator/@Image = 'clone']\n  [MethodDeclarator/FormalParameters/@ParameterCount = 0]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_MDBAndSessionBeanNamingConvention",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//TypeDeclaration/ClassOrInterfaceDeclaration\n[\n    (\n        (./ImplementsList/ClassOrInterfaceType[ends-with(@Image,'SessionBean')])\n        or\n        (./ImplementsList/ClassOrInterfaceType[ends-with(@Image,'MessageDrivenBean')])\n    )\n    and\n    not\n    (\n        ends-with(@Image,'Bean')\n    )\n]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_AvoidInstanceofChecksInCatchClause",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//CatchStatement/FormalParameter\n /following-sibling::Block//InstanceOfExpression/PrimaryExpression/PrimaryPrefix\n  /Name[\n   @Image = ./ancestor::Block/preceding-sibling::FormalParameter\n    /VariableDeclaratorId/@Image\n  ]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_LoggerIsNotStaticFinal",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//VariableDeclarator\n [parent::FieldDeclaration]\n [../Type/ReferenceType\n  /ClassOrInterfaceType[@Image='Logger']\n   and\n  (..[@Final='false'] or ..[@Static = 'false'] ) ]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_AvoidBranchingStatementAsLastInLoop",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_AvoidDuplicateLiterals",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_design_ExcessiveImports",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_ecmascript_codestyle_IfStmtsMustUseBraces",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//IfStatement[@Else = \"false\" and not(child::Scope)]\n\n                "
    } ],
    "languages" : [ "javascript" ]
  }, {
    "patternId" : "category_java_codestyle_ShortClassName",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "minimum",
      "default" : "5"
    }, {
      "name" : "xpath",
      "default" : "\n\n//ClassOrInterfaceDeclaration[string-length(@Image) < $minimum]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_design_SingularField",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_UnnecessaryFullyQualifiedName",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_vm_design_NoInlineStyles",
    "level" : "Warning",
    "category" : "ErrorProne",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//Text[matches(@literal, \"<[^>]+\\s[sS][tT][yY][lL][eE]\\s*=\")]\n\n                "
    } ],
    "languages" : [ "velocity" ]
  }, {
    "patternId" : "category_apex_bestpractices_ApexUnitTestShouldNotUseSeeAllDataTrue",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_java_bestpractices_UseVarargs",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//FormalParameters/FormalParameter\n    [position()=last()]\n    [@Array='true']\n    [@Varargs='false']\n    [not (./Type/ReferenceType[@Array='true'][PrimitiveType[@Image='byte']])]\n    [not (./Type/ReferenceType[ClassOrInterfaceType[@Image='Byte']])]\n    [not (./Type/PrimitiveType[@Image='byte'])]\n    [not (ancestor::MethodDeclaration/preceding-sibling::Annotation/*/Name[@Image='Override'])]\n    [not(\n        ancestor::MethodDeclaration\n            [@Public='true' and @Static='true']\n            [child::ResultType[@Void='true']] and\n        ancestor::MethodDeclarator[@Image='main'] and\n        ..[@ParameterCount='1'] and\n        ./Type/ReferenceType[ClassOrInterfaceType[@Image='String']]\n    )]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_DoNotHardCodeSDCard",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "//Literal[starts-with(@Image,'\"/sdcard')]"
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_AtLeastOneConstructor",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ClassOrInterfaceDeclaration[\n  not(ClassOrInterfaceBody/ClassOrInterfaceBodyDeclaration/ConstructorDeclaration)\n  and\n  (@Static = 'false')\n  and\n  (count(./descendant::MethodDeclaration[@Static = 'true']) < 1)\n]\n  [@Interface='false']\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_bestpractices_UseCollectionIsEmpty",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_apex_security_ApexOpenRedirect",
    "level" : "Error",
    "category" : "Security",
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_java_codestyle_VariableNamingConventions",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_AvoidUsingNativeCode",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "//Name[starts-with(@Image,'System.loadLibrary')]"
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_xsl_performance_AvoidAxisNavigation",
    "level" : "Warning",
    "category" : "Performance",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//node()[\n  contains(@select,'preceeding::')\n  or\n  contains(@select,'following::')\n  or\n  contains(@select,'descendant::')\n  or \n  contains(@select,'descendant-self::')\n  or (\n    ($checkSelfDescendantAbreviation = 'true' )\n    and\n    contains(@select,'//')\n    )\n]\n\n                "
    }, {
      "name" : "checkSelfDescendantAbreviation",
      "default" : "false"
    } ],
    "languages" : [ "xml" ]
  }, {
    "patternId" : "category_java_documentation_UncommentedEmptyConstructor",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ConstructorDeclaration[@Private='false']\n                        [count(BlockStatement) = 0 and ($ignoreExplicitConstructorInvocation = 'true' or not(ExplicitConstructorInvocation)) and @containsComment = 'false']\n                        [not(../Annotation/MarkerAnnotation/Name[typeof(@Image, 'javax.inject.Inject', 'Inject')])]\n\n                "
    }, {
      "name" : "ignoreExplicitConstructorInvocation",
      "default" : "false"
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_performance_AvoidFileStream",
    "level" : "Warning",
    "category" : "Performance",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//PrimaryPrefix/AllocationExpression/ClassOrInterfaceType[\n       typeof(@Image, 'java.io.FileInputStream', 'FileInputStream')\n    or typeof(@Image, 'java.io.FileOutputStream', 'FileOutputStream')\n    or typeof(@Image, 'java.io.FileReader', 'FileReader')\n    or typeof(@Image, 'java.io.FileWriter', 'FileWriter')\n  ]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_apex_security_ApexSOQLInjection",
    "level" : "Error",
    "category" : "Security",
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_ecmascript_codestyle_UnnecessaryBlock",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//Block[not(parent::FunctionNode or parent::IfStatement or parent::ForLoop or parent::ForInLoop\n    or parent::WhileLoop or parent::DoLoop or parent::TryStatement or parent::CatchClause)]\n|\n//Scope[not(parent::FunctionNode or parent::IfStatement or parent::ForLoop or parent::ForInLoop\n    or parent::WhileLoop or parent::DoLoop or parent::TryStatement or parent::CatchClause)]\n\n                "
    } ],
    "languages" : [ "javascript" ]
  }, {
    "patternId" : "category_java_performance_ConsecutiveAppendsShouldReuse",
    "level" : "Warning",
    "category" : "Performance",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_ecmascript_codestyle_NoElseReturn",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//IfStatement[@Else=\"true\"][Scope[1]/ReturnStatement]\n\n                "
    } ],
    "languages" : [ "javascript" ]
  }, {
    "patternId" : "category_ecmascript_codestyle_WhileLoopsMustUseBraces",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//WhileLoop[not(child::Scope)]\n\n                "
    } ],
    "languages" : [ "javascript" ]
  }, {
    "patternId" : "category_plsql_design_ExcessiveObjectLength",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "plsql" ]
  }, {
    "patternId" : "category_java_design_ExcessiveClassLength",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_performance_IntegerInstantiation",
    "level" : "Warning",
    "category" : "Performance",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//PrimaryPrefix\n /AllocationExpression\n  [not (ArrayDimsAndInits)\n   and (ClassOrInterfaceType/@Image='Integer'\n    or ClassOrInterfaceType/@Image='java.lang.Integer')]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_DoNotThrowExceptionInFinally",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "//FinallyStatement[descendant::ThrowStatement]"
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_ImportFromSamePackage",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_performance_ConsecutiveLiteralAppends",
    "level" : "Warning",
    "category" : "Performance",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_bestpractices_JUnit4TestShouldUseTestAnnotation",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ClassOrInterfaceBodyDeclaration[MethodDeclaration[@Public='true']/MethodDeclarator[starts-with(@Image,'test')]]\n[count(Annotation//Name[@Image='Test'])=0]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_InstantiationToGetClass",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//PrimarySuffix\n [@Image='getClass']\n [parent::PrimaryExpression\n  [PrimaryPrefix/AllocationExpression]\n  [count(PrimarySuffix) = 2]\n ]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_performance_InefficientStringBuffering",
    "level" : "Warning",
    "category" : "Performance",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_CallSuperInConstructor",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ClassOrInterfaceDeclaration[ count (ExtendsList/*) > 0 ]\n/ClassOrInterfaceBody\n /ClassOrInterfaceBodyDeclaration\n /ConstructorDeclaration[ count (.//ExplicitConstructorInvocation)=0 ]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_RemoteSessionInterfaceNamingConvention",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ClassOrInterfaceDeclaration\n[\n    (\n        (./ExtendsList/ClassOrInterfaceType[ends-with(@Image,'EJBHome')])\n    )\n    and\n    not\n    (\n        ends-with(@Image,'Home')\n    )\n]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_performance_LongInstantiation",
    "level" : "Warning",
    "category" : "Performance",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//PrimaryPrefix\n/AllocationExpression\n[not (ArrayDimsAndInits)\nand (ClassOrInterfaceType/@Image='Long'\nor ClassOrInterfaceType/@Image='java.lang.Long')]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_ecmascript_codestyle_UnreachableCode",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n    //ReturnStatement[following-sibling::node()]\n|\n    //ContinueStatement[following-sibling::node()]\n|\n    //BreakStatement[following-sibling::node()]\n|\n    //ThrowStatement[following-sibling::node()]\n\n                "
    } ],
    "languages" : [ "javascript" ]
  }, {
    "patternId" : "category_java_bestpractices_ReplaceVectorWithList",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "//Type/ReferenceType/ClassOrInterfaceType[@Image='Vector']"
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_apex_design_NcssTypeCount",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_java_codestyle_TooManyStaticImports",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "maximumStaticImports",
      "default" : "4"
    }, {
      "name" : "xpath",
      "default" : "\n\n.[count(ImportDeclaration[@Static = 'true']) > $maximumStaticImports]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_apex_codestyle_IfElseStmtsMustUseBraces",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//IfBlockStatement/BlockStatement[@CurlyBrace='false'][count(child::*) > 0]\n|\n//IfElseBlockStatement/BlockStatement[@CurlyBrace='false'][count(child::*) > 0]\n\n                "
    } ],
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_java_errorprone_DoNotCallSystemExit",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//Name[\n    starts-with(@Image,'System.exit')\n    or\n    (starts-with(@Image,'Runtime.getRuntime') and ../../PrimarySuffix[ends-with(@Image,'exit')])\n]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_jsp_bestpractices_NoClassAttribute",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//Attribute[ upper-case(@Name)=\"CLASS\" ]\n\n                "
    } ],
    "languages" : [ "jsp" ]
  }, {
    "patternId" : "category_jsp_codestyle_DuplicateJspImports",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "jsp" ]
  }, {
    "patternId" : "category_java_performance_UseArraysAsList",
    "level" : "Warning",
    "category" : "Performance",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//Statement[\n    (ForStatement) and (ForStatement//VariableInitializer//Literal[@IntLiteral='true' and @Image='0']) and (count(.//IfStatement)=0)\n   ]\n   //StatementExpression[\n    PrimaryExpression/PrimaryPrefix/Name[\n     substring-before(@Image,'.add') = ancestor::MethodDeclaration//LocalVariableDeclaration[\n      ./Type//ClassOrInterfaceType[\n       @Image = 'Collection' or \n       @Image = 'List' or @Image='ArrayList'\n      ]\n     ]\n     /VariableDeclarator/VariableDeclaratorId[\n      count(..//AllocationExpression/ClassOrInterfaceType[\n       @Image=\"ArrayList\"\n      ]\n      )=1\n     ]/@Image\n    ]\n   and\n   PrimaryExpression/PrimarySuffix/Arguments/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix/Name\n   [\n     @Image = ancestor::MethodDeclaration//LocalVariableDeclaration[@Array=\"true\"]/VariableDeclarator/VariableDeclaratorId/@Image\n     or\n     @Image = ancestor::MethodDeclaration//FormalParameter/VariableDeclaratorId/@Image\n   ]\n   /../..[count(.//PrimarySuffix)\n   =1]/PrimarySuffix/Expression/PrimaryExpression/PrimaryPrefix\n   /Name\n   ]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_UselessParentheses",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//Expression[not(parent::PrimaryPrefix)]/PrimaryExpression[count(*)>1]\n  /PrimaryPrefix/Expression\n    [not(./CastExpression)]\n    [not(./ConditionalExpression[@Ternary='true'])]\n    [not(./AdditiveExpression[//Literal[@StringLiteral='true']])]\n|\n//Expression[not(parent::PrimaryPrefix)]/PrimaryExpression[count(*)=1]\n  /PrimaryPrefix/Expression\n|\n//Expression/ConditionalAndExpression/PrimaryExpression/PrimaryPrefix/Expression[\n    count(*)=1 and\n    count(./CastExpression)=0 and\n    count(./EqualityExpression/MultiplicativeExpression)=0 and\n    count(./ConditionalExpression[@Ternary='true'])=0 and\n    count(./ConditionalOrExpression)=0]\n|\n//Expression/ConditionalOrExpression/PrimaryExpression/PrimaryPrefix/Expression[\n    count(*)=1 and\n    not(./CastExpression) and\n    not(./ConditionalExpression[@Ternary='true']) and\n    not(./EqualityExpression/MultiplicativeExpression)]\n|\n//Expression/ConditionalExpression/PrimaryExpression/PrimaryPrefix/Expression[\n    count(*)=1 and\n    not(./CastExpression) and\n    not(./EqualityExpression)]\n|\n//Expression/AdditiveExpression[not(./PrimaryExpression/PrimaryPrefix/Literal[@StringLiteral='true'])]\n  /PrimaryExpression[1]/PrimaryPrefix/Expression[\n    count(*)=1 and\n    not(./CastExpression) and\n    not(./AdditiveExpression[@Image = '-']) and\n    not(./ShiftExpression) and\n    not(./RelationalExpression) and\n    not(./InstanceOfExpression) and\n    not(./EqualityExpression) and\n    not(./AndExpression) and\n    not(./ExclusiveOrExpression) and\n    not(./InclusiveOrExpression) and\n    not(./ConditionalAndExpression) and\n    not(./ConditionalOrExpression) and\n    not(./ConditionalExpression)]\n|\n//Expression/EqualityExpression/PrimaryExpression/PrimaryPrefix/Expression[\n    count(*)=1 and\n    not(./CastExpression) and\n    not(./AndExpression) and\n    not(./InclusiveOrExpression) and\n    not(./ExclusiveOrExpression) and\n    not(./ConditionalExpression) and\n    not(./ConditionalAndExpression) and\n    not(./ConditionalOrExpression) and\n    not(./EqualityExpression)]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_CompareObjectsWithEquals",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_MIsLeadingVariableName",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//VariableDeclaratorId\n[starts-with(@Image, 'm_')]\n[not (../../../FieldDeclaration)]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_EmptyFinallyBlock",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//FinallyStatement[count(Block/BlockStatement) = 0]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_SimpleDateFormatNeedsLocale",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//AllocationExpression\n [ClassOrInterfaceType[@Image='SimpleDateFormat']]\n [Arguments[@ArgumentCount=1]]\n\n                    "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_performance_AppendCharacterWithChar",
    "level" : "Warning",
    "category" : "Performance",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_bestpractices_UnusedPrivateField",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_jsp_errorprone_JspEncoding",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//CompilationUnit/Content[\nnot(Element[@Name=\"meta\"][\n   Attribute[@Name=\"content\"]/AttributeValue[contains(lower-case(@Image),\"charset=utf-8\")]\n]) \nand \n    not(JspDirective[@Name='page']/JspDirectiveAttribute[@Name='contentType'][contains(lower-case(@Value),\"charset=utf-8\")])\n]\n\n                "
    } ],
    "languages" : [ "jsp" ]
  }, {
    "patternId" : "category_java_errorprone_MisplacedNullCheck",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//Expression\n    /*[self::ConditionalOrExpression or self::ConditionalAndExpression]\n    /descendant::PrimaryExpression/PrimaryPrefix\n    /Name[starts-with(@Image,\n        concat(ancestor::PrimaryExpression/following-sibling::EqualityExpression\n            [./PrimaryExpression/PrimaryPrefix/Literal/NullLiteral]\n            /PrimaryExpression/PrimaryPrefix\n            /Name[count(../../PrimarySuffix)=0]/@Image,\".\")\n        )\n     ]\n     [count(ancestor::ConditionalAndExpression/EqualityExpression\n            [@Image='!=']\n            [./PrimaryExpression/PrimaryPrefix/Literal/NullLiteral]\n            [starts-with(following-sibling::*/PrimaryExpression/PrimaryPrefix/Name/@Image,\n                concat(./PrimaryExpression/PrimaryPrefix/Name/@Image, '.'))]\n      ) = 0\n     ]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_bestpractices_AvoidUsingHardCodedIP",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "pattern",
      "default" : "^\"[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\"$"
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_AvoidUsingOctalValues",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_AvoidLosingExceptionInformation",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//CatchStatement/Block/BlockStatement/Statement/StatementExpression/PrimaryExpression/PrimaryPrefix/Name\n[\n   @Image = concat(../../../../../../../FormalParameter/VariableDeclaratorId/@Image, '.getMessage')\n   or\n   @Image = concat(../../../../../../../FormalParameter/VariableDeclaratorId/@Image, '.getLocalizedMessage')\n   or\n   @Image = concat(../../../../../../../FormalParameter/VariableDeclaratorId/@Image, '.getCause')\n   or\n   @Image = concat(../../../../../../../FormalParameter/VariableDeclaratorId/@Image, '.getStackTrace')\n   or\n   @Image = concat(../../../../../../../FormalParameter/VariableDeclaratorId/@Image, '.toString')\n]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_ecmascript_errorprone_EqualComparison",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//InfixExpression[(@Image = \"==\" or @Image = \"!=\")\n  and\n (child::KeywordLiteral[@Image = \"true\" or @Image = \"false\"]\n or\n child::NumberLiteral)\n]\n\n                "
    } ],
    "languages" : [ "javascript" ]
  }, {
    "patternId" : "category_java_bestpractices_UnusedPrivateMethod",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_bestpractices_LooseCoupling",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_apex_codestyle_ForLoopsMustUseBraces",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ForLoopStatement/BlockStatement[@CurlyBrace='false']\n|\n//ForEachStatement/BlockStatement[@CurlyBrace='false']\n\n                "
    } ],
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_java_bestpractices_AvoidStringBufferField",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//FieldDeclaration/Type/ReferenceType/ClassOrInterfaceType[@Image = 'StringBuffer' or @Image = 'StringBuilder']\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_FinalizeDoesNotCallSuperFinalize",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n\n//MethodDeclaration[MethodDeclarator[@Image='finalize'][not(FormalParameters/*)]]\n   /Block\n      /BlockStatement[last()]\n      [not(Statement/StatementExpression/PrimaryExpression\n            [./PrimaryPrefix[@SuperModifier='true']]\n            [./PrimarySuffix[@Image='finalize']]\n          )\n      ]\n      [not(Statement/TryStatement/FinallyStatement\n       /Block/BlockStatement/Statement/StatementExpression/PrimaryExpression\n            [./PrimaryPrefix[@SuperModifier='true']]\n            [./PrimarySuffix[@Image='finalize']]\n          )\n      ]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_apex_design_CyclomaticComplexity",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_java_codestyle_AvoidProtectedMethodInFinalClassNotExtending",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ClassOrInterfaceDeclaration[@Final='true' and not(ExtendsList)]\n/ClassOrInterfaceBody/ClassOrInterfaceBodyDeclaration\n/MethodDeclaration[@Protected='true'][MethodDeclarator/@Image != 'finalize']\n \n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_design_ExcessiveParameterList",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_design_CollapsibleIfStatements",
    "level" : "Warning",
    "category" : "ErrorProne",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//IfStatement[@Else='false']/Statement\n /IfStatement[@Else='false']\n |\n//IfStatement[@Else='false']/Statement\n /Block[count(BlockStatement)=1]/BlockStatement\n  /Statement/IfStatement[@Else='false']\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_bestpractices_JUnit4SuitesShouldUseSuiteAnnotation",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ClassOrInterfaceBodyDeclaration[MethodDeclaration/MethodDeclarator[@Image='suite']]\n[MethodDeclaration/ResultType/Type/ReferenceType/ClassOrInterfaceType[@Image='Test' or @Image = 'junit.framework.Test']]\n[not(MethodDeclaration/Block//ClassOrInterfaceType[@Image='JUnit4TestAdapter'])]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_apex_errorprone_AvoidDirectAccessTriggerMap",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ArrayLoadExpression[TriggerVariableExpression and LiteralExpression]\n\n                "
    } ],
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_java_errorprone_MoreThanOneLogger",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_bestpractices_PositionLiteralsFirstInComparisons",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//PrimaryExpression[\n    PrimaryPrefix[Name[(ends-with(@Image, '.equals'))]]\n        [\n            (../PrimarySuffix/Arguments/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix/Literal[@StringLiteral='true'])\n            and\n            ( count(../PrimarySuffix/Arguments/ArgumentList/Expression) = 1 )\n        ]\n]\n[not(ancestor::Expression/ConditionalAndExpression//EqualityExpression[@Image='!=']//NullLiteral)]\n[not(ancestor::Expression/ConditionalOrExpression//EqualityExpression[@Image='==']//NullLiteral)]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_DoNotCallGarbageCollectionExplicitly",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//Name[\n(starts-with(@Image, 'System.') and\n(starts-with(@Image, 'System.gc') or\nstarts-with(@Image, 'System.runFinalization'))) or\n(\nstarts-with(@Image,'Runtime.getRuntime') and\n../../PrimarySuffix[ends-with(@Image,'gc')]\n)\n]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_SingleMethodSingleton",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_apex_security_ApexXSSFromEscapeFalse",
    "level" : "Error",
    "category" : "Security",
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_java_multithreading_AvoidThreadGroup",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//AllocationExpression/ClassOrInterfaceType[pmd-java:typeof(@Image, 'java.lang.ThreadGroup')]|\n//PrimarySuffix[contains(@Image, 'getThreadGroup')]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_jsp_bestpractices_NoHtmlComments",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//CommentTag\n\n                "
    } ],
    "languages" : [ "jsp" ]
  }, {
    "patternId" : "category_java_codestyle_IfStmtsMustUseBraces",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//IfStatement[count(*) < 3][not(Statement/Block)]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_plsql_errorprone_TO_DATEWithoutDateFormat",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//PrimaryExpression[PrimaryPrefix/Name/@Image='TO_DATE'  and count(PrimarySuffix/Arguments/ArgumentList/Argument) = 1 ]\n\n                "
    } ],
    "languages" : [ "plsql" ]
  }, {
    "patternId" : "category_vm_errorprone_EmptyForeachStmt",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "velocity" ]
  }, {
    "patternId" : "category_java_codestyle_OnlyOneReturn",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_SuspiciousConstantFieldName",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ClassOrInterfaceDeclaration[@Interface='false']\n /ClassOrInterfaceBody/ClassOrInterfaceBodyDeclaration/FieldDeclaration\n  [@Final='false']\n  [VariableDeclarator/VariableDeclaratorId[upper-case(@Image)=@Image]]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_bestpractices_ReplaceEnumerationWithIterator",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ImplementsList/ClassOrInterfaceType[@Image='Enumeration']\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_ecmascript_bestpractices_ScopeForInVariable",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ForInLoop[not(child::VariableDeclaration)]/Name[1]\n\n                "
    } ],
    "languages" : [ "javascript" ]
  }, {
    "patternId" : "category_java_design_SwitchDensity",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_LongVariable",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "minimum",
      "default" : "17"
    }, {
      "name" : "xpath",
      "default" : "\n\n//VariableDeclaratorId[string-length(@Image) > $minimum]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_plsql_design_ExcessiveMethodLength",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "plsql" ]
  }, {
    "patternId" : "category_java_design_SimplifiedTernary",
    "level" : "Warning",
    "category" : "ErrorProne",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ConditionalExpression[@Ternary='true'][not(PrimaryExpression/*/Literal) and (Expression/PrimaryExpression/*/Literal/BooleanLiteral)]\n|\n//ConditionalExpression[@Ternary='true'][not(Expression/PrimaryExpression/*/Literal) and (PrimaryExpression/*/Literal/BooleanLiteral)]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_design_GodClass",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_design_CouplingBetweenObjects",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_DefaultPackage",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ClassOrInterfaceDeclaration[@Interface='false']\n/ClassOrInterfaceBody\n/ClassOrInterfaceBodyDeclaration\n[not(Annotation//Name[ends-with(@Image, 'VisibleForTesting')])]\n[\nFieldDeclaration[@PackagePrivate='true']\nor MethodDeclaration[@PackagePrivate='true']\n]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_apex_errorprone_EmptyTryOrFinallyBlock",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//TryCatchFinallyBlockStatement[./BlockStatement[count(*) = 0]]\n\n                "
    } ],
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_java_design_SignatureDeclareThrowsException",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_jsp_bestpractices_DontNestJsfInJstlIteration",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//Element[ @Name=\"c:forEach\" ] // Element[ @NamespacePrefix=\"h\" or @NamespacePrefix=\"f\" ]\n\n                "
    } ],
    "languages" : [ "jsp" ]
  }, {
    "patternId" : "category_java_errorprone_MissingSerialVersionUID",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ClassOrInterfaceDeclaration\n [\n  count(ClassOrInterfaceBody/ClassOrInterfaceBodyDeclaration\n   /FieldDeclaration/VariableDeclarator/VariableDeclaratorId[@Image='serialVersionUID']) = 0\nand\n  count(ImplementsList\n   [ClassOrInterfaceType/@Image='Serializable'\n   or ClassOrInterfaceType/@Image='java.io.Serializable']) =1\nand\n   @Abstract = 'false'\n]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_bestpractices_CheckResultSet",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_AvoidMultipleUnaryOperators",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_pom_errorprone_ProjectVersionAsDependencyVersion",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//dependency/version/text[contains(@Image,'{project.version}')]\n\n                "
    } ],
    "languages" : [ "xml" ]
  }, {
    "patternId" : "category_java_errorprone_StringBufferInstantiationWithChar",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//AllocationExpression/ClassOrInterfaceType\n[@Image='StringBuffer' or @Image='StringBuilder']\n/../Arguments/ArgumentList/Expression/PrimaryExpression\n/PrimaryPrefix/\nLiteral\n  [starts-with(@Image, \"'\")]\n  [ends-with(@Image, \"'\")]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_NoPackage",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "//ClassOrInterfaceDeclaration[count(preceding::PackageDeclaration) = 0]"
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_bestpractices_UnusedImports",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_apex_security_ApexCRUDViolation",
    "level" : "Error",
    "category" : "Security",
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_java_performance_StringToString",
    "level" : "Warning",
    "category" : "Performance",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_UnnecessaryConstructor",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ClassOrInterfaceBody[count(ClassOrInterfaceBodyDeclaration/ConstructorDeclaration)=1]\n/ClassOrInterfaceBodyDeclaration/ConstructorDeclaration\n[@Public='true']\n[not(FormalParameters/*)]\n[not(BlockStatement)]\n[not(NameList)]\n[count(ExplicitConstructorInvocation/Arguments/ArgumentList/Expression)=0]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_EmptyFinalizer",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//MethodDeclaration[MethodDeclarator[@Image='finalize'][not(FormalParameters/*)]]\n  /Block[count(*)=0]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_performance_UnnecessaryWrapperObjectCreation",
    "level" : "Warning",
    "category" : "Performance",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_ShortVariable",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "minimum",
      "default" : "3"
    }, {
      "name" : "xpath",
      "default" : "\n\n//VariableDeclaratorId[string-length(@Image) < $minimum]\n [not(ancestor::ForInit)]\n [not(../../VariableDeclarator and ../../../LocalVariableDeclaration and ../../../../ForStatement)]\n [not((ancestor::FormalParameter) and (ancestor::TryStatement))]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_CloneMethodMustImplementCloneable",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_design_NcssCount",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_UnnecessaryLocalBeforeReturn",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_bestpractices_JUnit4TestShouldUseAfterAnnotation",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//CompilationUnit[not(ImportDeclaration/Name[starts-with(@Image, \"org.testng\")])]\n//ClassOrInterfaceBodyDeclaration[MethodDeclaration/MethodDeclarator[@Image='tearDown']]\n[count(Annotation//Name[@Image='After'])=0]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_DuplicateImports",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_design_LoosePackageCoupling",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_bestpractices_SwitchStmtsShouldHaveDefault",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "//SwitchStatement[not(SwitchLabel[@Default='true'])]"
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_UnnecessaryBooleanAssertion",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//StatementExpression\n[\nPrimaryExpression/PrimaryPrefix/Name[@Image='assertTrue' or  @Image='assertFalse']\nand\nPrimaryExpression/PrimarySuffix/Arguments/ArgumentList/Expression\n[PrimaryExpression/PrimaryPrefix/Literal/BooleanLiteral\nor\nUnaryExpressionNotPlusMinus[@Image='!']\n/PrimaryExpression/PrimaryPrefix[Literal/BooleanLiteral or Name[count(../../*)=1]]]\n]\n[ancestor::ClassOrInterfaceDeclaration[//ClassOrInterfaceType[pmd-java:typeof(@Image, 'junit.framework.TestCase','TestCase')] or //MarkerAnnotation/Name[pmd-java:typeof(@Image, 'org.junit.Test', 'Test')]]]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_plsql_errorprone_TO_TIMESTAMPWithoutDateFormat",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//PrimaryExpression[PrimaryPrefix/Name/@Image='TO_TIMESTAMP'  and count(PrimarySuffix/Arguments/ArgumentList/Argument) = 1 ] \n\n                "
    } ],
    "languages" : [ "plsql" ]
  }, {
    "patternId" : "category_java_errorprone_AvoidAccessibilityAlteration",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//PrimaryExpression[\n(\n(PrimarySuffix[\n        ends-with(@Image,'getDeclaredConstructors')\n                or\n        ends-with(@Image,'getDeclaredConstructor')\n                or\n        ends-with(@Image,'setAccessible')\n        ])\nor\n(PrimaryPrefix/Name[\n        ends-with(@Image,'getDeclaredConstructor')\n        or\n        ends-with(@Image,'getDeclaredConstructors')\n        or\n        starts-with(@Image,'AccessibleObject.setAccessible')\n        ])\n)\nand\n(//ImportDeclaration/Name[\n        contains(@Image,'java.security.PrivilegedAction')])\n]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_plsql_bestpractices_TomKytesDespair",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ExceptionHandler[QualifiedName/@Image='OTHERS' and upper-case(Statement/UnlabelledStatement/Expression/@Image)='NULL']\n\n                "
    } ],
    "languages" : [ "plsql" ]
  }, {
    "patternId" : "category_java_errorprone_UnnecessaryConversionTemporary",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_apex_errorprone_AvoidHardcodingId",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_java_codestyle_ExtendsObject",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ExtendsList/ClassOrInterfaceType[@Image='Object' or @Image='java.lang.Object']\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_ConfusingTernary",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_design_TooManyFields",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_ecmascript_bestpractices_GlobalVariable",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//Assignment[Name/@GlobalName = 'true']\n\n                "
    } ],
    "languages" : [ "javascript" ]
  }, {
    "patternId" : "category_apex_performance_AvoidSoqlInLoops",
    "level" : "Warning",
    "category" : "Performance",
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_java_codestyle_AvoidProtectedFieldInFinalClass",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ClassOrInterfaceDeclaration[@Final='true']\n/ClassOrInterfaceBody/ClassOrInterfaceBodyDeclaration\n/FieldDeclaration[@Protected='true']\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_design_CyclomaticComplexity",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_design_UseObjectForClearerAPI",
    "level" : "Warning",
    "category" : "ErrorProne",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//MethodDeclaration[@Public]/MethodDeclarator/FormalParameters[\n     count(FormalParameter/Type/ReferenceType/ClassOrInterfaceType[@Image = 'String']) > 3\n]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_design_AbstractClassWithoutAnyMethod",
    "level" : "Warning",
    "category" : "ErrorProne",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ClassOrInterfaceDeclaration\n    [@Abstract = 'true']\n    [count(//MethodDeclaration) + count(//ConstructorDeclaration) = 0]\n    [not(../Annotation/MarkerAnnotation/Name[typeof(@Image, 'com.google.auto.value.AutoValue', 'AutoValue')])]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_IfElseStmtsMustUseBraces",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//Statement\n [parent::IfStatement[@Else='true']]\n [not(child::Block)]\n [not(child::IfStatement)]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_AssignmentToNonFinalStatic",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_bestpractices_UnusedFormalParameter",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_bestpractices_JUnitUseExpected",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_AssignmentInOperand",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_SuspiciousEqualsMethodName",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//MethodDeclarator[@Image = 'equals']\n[   \n    (count(FormalParameters/*) = 1\n    and not (FormalParameters/FormalParameter/Type/ReferenceType/ClassOrInterfaceType\n        [@Image = 'Object' or @Image = 'java.lang.Object'])\n    or not (../ResultType/Type/PrimitiveType[@Image = 'boolean'])\n    )  or  (\n    count(FormalParameters/*) = 2\n    and ../ResultType/Type/PrimitiveType[@Image = 'boolean']\n    and FormalParameters//ClassOrInterfaceType[@Image = 'Object' or @Image = 'java.lang.Object']\n    and not(../../Annotation/MarkerAnnotation/Name[@Image='Override'])\n    )\n]\n| //MethodDeclarator[@Image = 'equal']\n[\n    count(FormalParameters/*) = 1\n    and FormalParameters/FormalParameter/Type/ReferenceType/ClassOrInterfaceType\n        [@Image = 'Object' or @Image = 'java.lang.Object']\n]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_JUnitStaticSuite",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//MethodDeclaration[not(@Static='true') or not(@Public='true')]\n[MethodDeclarator/@Image='suite']\n[MethodDeclarator/FormalParameters/@ParameterCount=0]\n[ancestor::ClassOrInterfaceDeclaration[//ClassOrInterfaceType[pmd-java:typeof(@Image, 'junit.framework.TestCase','TestCase')] or //MarkerAnnotation/Name[pmd-java:typeof(@Image, 'org.junit.Test', 'Test')]]]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_jsp_bestpractices_NoJspForward",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//Element[ @Name=\"jsp:forward\" ]\n\n                "
    } ],
    "languages" : [ "jsp" ]
  }, {
    "patternId" : "category_java_performance_UselessStringValueOf",
    "level" : "Warning",
    "category" : "Performance",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_ClassNamingConventions",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_performance_SimplifyStartsWith",
    "level" : "Warning",
    "category" : "Performance",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//PrimaryExpression\n [PrimaryPrefix/Name\n  [ends-with(@Image, '.startsWith')] or PrimarySuffix[@Image='startsWith']]\n [PrimarySuffix/Arguments/ArgumentList\n  /Expression/PrimaryExpression/PrimaryPrefix\n  /Literal\n   [string-length(@Image)=3]\n   [starts-with(@Image, '\"')]\n   [ends-with(@Image, '\"')]\n ]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_jsp_design_NoLongScripts",
    "level" : "Warning",
    "category" : "ErrorProne",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//HtmlScript[(@EndLine - @BeginLine > 10)]\n\n                "
    } ],
    "languages" : [ "jsp" ]
  }, {
    "patternId" : "category_ecmascript_codestyle_UnnecessaryParentheses",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ParenthesizedExpression/ParenthesizedExpression\n\n                "
    } ],
    "languages" : [ "javascript" ]
  }, {
    "patternId" : "category_apex_codestyle_WhileLoopsMustUseBraces",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//WhileLoopStatement/BlockStatement[@CurlyBrace='false']\n\n                "
    } ],
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_java_errorprone_MissingStaticMethodInNonInstantiatableClass",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ClassOrInterfaceDeclaration[@Nested='false']\n[\n  (\n    ./ClassOrInterfaceBody/ClassOrInterfaceBodyDeclaration/ConstructorDeclaration\n    and\n    count(./ClassOrInterfaceBody/ClassOrInterfaceBodyDeclaration/ConstructorDeclaration) = count(./ClassOrInterfaceBody/ClassOrInterfaceBodyDeclaration/ConstructorDeclaration[@Private='true'])\n  )\n  and\n  not(.//MethodDeclaration[@Static='true'])\n  and\n  not(.//FieldDeclaration[@Private='false'][@Static='true'])\n  and\n  not(.//ClassOrInterfaceDeclaration[@Nested='true']\n           [@Public='true']\n           [@Static='true']\n           [not(./ClassOrInterfaceBody/ClassOrInterfaceBodyDeclaration/ConstructorDeclaration) or ./ClassOrInterfaceBody/ClassOrInterfaceBodyDeclaration/ConstructorDeclaration[@Public='true']]\n           [./ClassOrInterfaceBody/ClassOrInterfaceBodyDeclaration/MethodDeclaration\n                [@Public='true']\n                [./ResultType/Type/ReferenceType/ClassOrInterfaceType\n                    [@Image = //ClassOrInterfaceDeclaration[@Nested='false']/@Image]\n                ]\n            ]\n        )\n]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_vm_errorprone_EmptyIfStmt",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "velocity" ]
  }, {
    "patternId" : "category_java_bestpractices_ReplaceHashtableWithMap",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "//Type/ReferenceType/ClassOrInterfaceType[@Image='Hashtable']"
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_AvoidLiteralsInIfCondition",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "ignoreMagicNumbers",
      "default" : "-1,0"
    }, {
      "name" : "xpath",
      "default" : "\n\n//IfStatement/Expression/*/PrimaryExpression/PrimaryPrefix/Literal\n[not(NullLiteral)]\n[not(BooleanLiteral)]\n[empty(index-of(tokenize($ignoreMagicNumbers, '\\s*,\\s*'), @Image))]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_design_FinalFieldCouldBeStatic",
    "level" : "Warning",
    "category" : "ErrorProne",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//FieldDeclaration\n [@Final='true' and @Static='false']\n   /VariableDeclarator/VariableInitializer/Expression\n    /PrimaryExpression[not(PrimarySuffix)]/PrimaryPrefix/Literal\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_ecmascript_errorprone_AvoidTrailingComma",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ObjectLiteral[$allowObjectLiteral = \"false\" and @TrailingComma = 'true']\n|\n//ArrayLiteral[$allowArrayLiteral = \"false\" and @TrailingComma = 'true']\n\n                "
    }, {
      "name" : "allowObjectLiteral",
      "default" : "false"
    }, {
      "name" : "allowArrayLiteral",
      "default" : "false"
    } ],
    "languages" : [ "javascript" ]
  }, {
    "patternId" : "category_java_design_UselessOverridingMethod",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_bestpractices_UseAssertNullInsteadOfAssertTrue",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//PrimaryExpression[\n PrimaryPrefix/Name[@Image = 'assertTrue' or @Image = 'assertFalse']\n][\n PrimarySuffix/Arguments/ArgumentList[\n  Expression/EqualityExpression/PrimaryExpression/PrimaryPrefix/Literal/NullLiteral\n ]\n]\n[ancestor::ClassOrInterfaceDeclaration[//ClassOrInterfaceType[pmd-java:typeof(@Image, 'junit.framework.TestCase','TestCase')] or //MarkerAnnotation/Name[pmd-java:typeof(@Image, 'org.junit.Test', 'Test')]]]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_bestpractices_PositionLiteralsFirstInCaseInsensitiveComparisons",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//PrimaryExpression[\n        PrimaryPrefix[Name\n                [\n    (ends-with(@Image, '.equalsIgnoreCase'))\n                ]\n        ]\n        [\n                   (../PrimarySuffix/Arguments/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix/Literal)\n    and\n    ( count(../PrimarySuffix/Arguments/ArgumentList/Expression) = 1 )\n        ]\n]\n[not(ancestor::Expression/ConditionalAndExpression//EqualityExpression[@Image='!=']//NullLiteral)]\n[not(ancestor::Expression/ConditionalOrExpression//EqualityExpression[@Image='==']//NullLiteral)]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_performance_UseArrayListInsteadOfVector",
    "level" : "Warning",
    "category" : "Performance",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//CompilationUnit[count(ImportDeclaration) = 0 or count(ImportDeclaration/Name[@Image='java.util.Vector']) > 0]\n  //AllocationExpression/ClassOrInterfaceType\n    [@Image='Vector' or @Image='java.util.Vector']\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_vm_design_CollapsibleIfStatements",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "velocity" ]
  }, {
    "patternId" : "category_java_errorprone_ClassCastExceptionWithToArray",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//CastExpression[Type/ReferenceType/ClassOrInterfaceType[@Image !=\n\"Object\"]]/PrimaryExpression\n[\n PrimaryPrefix/Name[ends-with(@Image, '.toArray')]\n and\n PrimarySuffix/Arguments[count(*) = 0]\nand\ncount(PrimarySuffix) = 1\n]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_multithreading_DontCallThreadRun",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//StatementExpression/PrimaryExpression\n[\n    PrimaryPrefix\n    [\n        ./Name[ends-with(@Image, '.run') or @Image = 'run']\n        and substring-before(Name/@Image, '.') =//VariableDeclarator/VariableDeclaratorId/@Image\n            [../../../Type/ReferenceType/ClassOrInterfaceType[typeof(@Image, 'java.lang.Thread', 'Thread')]]\n        or (./AllocationExpression/ClassOrInterfaceType[typeof(@Image, 'java.lang.Thread', 'Thread')]\n        and ../PrimarySuffix[@Image = 'run'])\n    ]\n]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_plsql_codestyle_MisplacedPragma",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ProgramUnit/Pragma\n\n                "
    } ],
    "languages" : [ "plsql" ]
  }, {
    "patternId" : "category_java_errorprone_AvoidFieldNameMatchingTypeName",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_ConstructorCallsOverridableMethod",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_DontImportSun",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_apex_security_ApexInsecureEndpoint",
    "level" : "Error",
    "category" : "Security",
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_java_errorprone_EmptyIfStmt",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//IfStatement/Statement\n [EmptyStatement or Block[count(*) = 0]]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_multithreading_UseNotifyAllInsteadOfNotify",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//StatementExpression/PrimaryExpression\n[PrimarySuffix/Arguments[@ArgumentCount = '0']]\n[\n    PrimaryPrefix[\n        ./Name[@Image='notify' or ends-with(@Image,'.notify')]\n        or ../PrimarySuffix/@Image='notify'\n        or (./AllocationExpression and ../PrimarySuffix[@Image='notify'])\n    ]\n]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_LocalInterfaceSessionNamingConvention",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ClassOrInterfaceDeclaration\n[\n    (\n        (./ExtendsList/ClassOrInterfaceType[ends-with(@Image,'EJBLocalObject')])\n    )\n    and\n    not\n    (\n        ends-with(@Image,'Local')\n    )\n]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_plsql_design_ExcessivePackageBodyLength",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "plsql" ]
  }, {
    "patternId" : "category_apex_codestyle_MethodNamingConventions",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_xsl_codestyle_UseConcatOnce",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//node()[contains(substring-after(@select,'concat'),'concat')]\n\n                "
    } ],
    "languages" : [ "xml" ]
  }, {
    "patternId" : "category_apex_design_StdCyclomaticComplexity",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_java_multithreading_AvoidUsingVolatile",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "//FieldDeclaration[contains(@Volatile,'true')]"
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_performance_InsufficientStringBufferDeclaration",
    "level" : "Warning",
    "category" : "Performance",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_plsql_errorprone_TO_DATE_TO_CHAR",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//PrimaryExpression\n    [PrimaryPrefix/Name/@Image='TO_DATE']\n    [count(PrimarySuffix/Arguments/ArgumentList/Argument) = 1]\n    [.//PrimaryExpression\n        [PrimaryPrefix/Name/@Image='TO_CHAR']\n        [count(PrimarySuffix/Arguments/ArgumentList/Argument) = 1]\n    ]\n\n                "
    } ],
    "languages" : [ "plsql" ]
  }, {
    "patternId" : "category_apex_design_AvoidDeeplyNestedIfStmts",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_java_performance_UseStringBufferLength",
    "level" : "Warning",
    "category" : "Performance",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_xml_errorprone_MistypedCDATASection",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//cdata-section[starts-with(@Image,'[') or ends-with(@Image,']')]\n\n                "
    } ],
    "languages" : [ "xml" ]
  }, {
    "patternId" : "category_java_documentation_CommentRequired",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_bestpractices_UseAssertTrueInsteadOfAssertEquals",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//PrimaryExpression[PrimaryPrefix/Name[@Image = 'assertEquals']]\n[\n  PrimarySuffix/Arguments/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix/Literal/BooleanLiteral\n  or\n  PrimarySuffix/Arguments/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix\n  /Name[(@Image = 'Boolean.TRUE' or @Image = 'Boolean.FALSE')]\n]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_plsql_design_CyclomaticComplexity",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "plsql" ]
  }, {
    "patternId" : "category_java_performance_UseIndexOfChar",
    "level" : "Warning",
    "category" : "Performance",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_ecmascript_codestyle_ForLoopsMustUseBraces",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ForLoop[not(child::Scope)]\n|\n//ForInLoop[not(child::Scope)]\n\n                "
    } ],
    "languages" : [ "javascript" ]
  }, {
    "patternId" : "category_java_design_TooManyMethods",
    "level" : "Warning",
    "category" : "ErrorProne",
    "parameters" : [ {
      "name" : "maxmethods",
      "default" : "10"
    }, {
      "name" : "xpath",
      "default" : "\n                    \n\n //ClassOrInterfaceDeclaration/ClassOrInterfaceBody\n     [\n      count(./ClassOrInterfaceBodyDeclaration/MethodDeclaration/MethodDeclarator[\n         not (\n                starts-with(@Image,'get')\n                or\n                starts-with(@Image,'set')\n                or\n                starts-with(@Image,'is')\n            )\n      ]) > $maxmethods\n   ]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_bestpractices_UseAssertSameInsteadOfAssertTrue",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//PrimaryExpression[\n    PrimaryPrefix/Name\n     [@Image = 'assertTrue' or @Image = 'assertFalse']\n]\n[PrimarySuffix/Arguments\n /ArgumentList/Expression\n /EqualityExpression[count(.//NullLiteral) = 0]]\n[ancestor::ClassOrInterfaceDeclaration[//ClassOrInterfaceType[pmd-java:typeof(@Image, 'junit.framework.TestCase','TestCase')] or //MarkerAnnotation/Name[pmd-java:typeof(@Image, 'org.junit.Test', 'Test')]]]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_NonCaseLabelInSwitchStatement",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "//SwitchStatement//BlockStatement/Statement/LabeledStatement"
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_ProperLogger",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ClassOrInterfaceBodyDeclaration[FieldDeclaration//ClassOrInterfaceType[@Image='Log']\n and\n not(FieldDeclaration[@Final='true'][@Static='true'][@Private='true'][.//VariableDeclaratorId[@Image=$staticLoggerName]]\n //ArgumentList//ClassOrInterfaceType/@Image = ancestor::ClassOrInterfaceDeclaration/@Image)\n and\n not(FieldDeclaration[@Final='true'][@Private='true'][.//VariableDeclaratorId[@Image='log']]\n [count(.//VariableInitializer)=0]\n [ancestor::ClassOrInterfaceBody//StatementExpression[.//PrimaryExpression/descendant::*[@Image='log']][count(.//AllocationExpression)=0]]\n )]\n\n                "
    }, {
      "name" : "staticLoggerName",
      "default" : "LOG"
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_AvoidEnumAsIdentifier",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "//VariableDeclaratorId[@Image='enum']"
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_CommentDefaultAccessModifier",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "regex",
      "default" : "\n\n\\/\\*\\s+default\\s+\\*\\/\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_AvoidCatchingThrowable",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_IdempotentOperations",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_EmptyInitializer",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "//Initializer/Block[count(*)=0]"
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_BeanMembersShouldSerialize",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_jsp_design_NoScriptlets",
    "level" : "Warning",
    "category" : "ErrorProne",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//JspScriptlet\n|\n//Element[ upper-case(@Name)=\"JSP:SCRIPTLET\" ]\n\n                "
    } ],
    "languages" : [ "jsp" ]
  }, {
    "patternId" : "category_java_documentation_CommentSize",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_apex_bestpractices_ApexUnitTestClassShouldHaveAsserts",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_java_multithreading_AvoidSynchronizedAtMethodLevel",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "//MethodDeclaration[@Synchronized='true']"
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_EqualsNull",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//PrimaryExpression\n  [\n    PrimaryPrefix[Name[ends-with(@Image, 'equals')]]\n      [following-sibling::node()/Arguments/ArgumentList[count(Expression)=1]\n          /Expression/PrimaryExpression/PrimaryPrefix/Literal/NullLiteral]\n\n    or\n\n    PrimarySuffix[ends-with(@Image, 'equals')]\n      [following-sibling::node()/Arguments/ArgumentList[count(Expression)=1]\n          /Expression/PrimaryExpression/PrimaryPrefix/Literal/NullLiteral]\n\n  ]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_design_AvoidThrowingNewInstanceOfSameException",
    "level" : "Warning",
    "category" : "ErrorProne",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//CatchStatement[\n  count(Block/BlockStatement/Statement) = 1\n  and\n  FormalParameter/Type/ReferenceType/ClassOrInterfaceType/@Image = Block/BlockStatement/Statement/ThrowStatement/Expression/PrimaryExpression/PrimaryPrefix/AllocationExpression/ClassOrInterfaceType/@Image\n  and\n  count(Block/BlockStatement/Statement/ThrowStatement/Expression/PrimaryExpression/PrimaryPrefix/AllocationExpression/Arguments/ArgumentList/Expression) = 1\n  and\n  FormalParameter/VariableDeclaratorId = Block/BlockStatement/Statement/ThrowStatement/Expression/PrimaryExpression/PrimaryPrefix/AllocationExpression/Arguments/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix/Name\n  ]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_InvalidSlf4jMessageFormat",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_AvoidDollarSigns",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_apex_errorprone_EmptyCatchBlock",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//CatchBlockStatement[./BlockStatement[count(*) = 0]]\n\n                "
    } ],
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_java_codestyle_ForLoopShouldBeWhileLoop",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ForStatement\n  [not(LocalVariableDeclaration)]\n  [not(ForInit)]\n  [not(ForUpdate)]\n  [Expression]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_apex_codestyle_ClassNamingConventions",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_java_codestyle_PackageCase",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "//PackageDeclaration/Name[lower-case(@Image)!=@Image]"
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_UnusedNullCheckInEquals",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n(//PrimaryPrefix[ends-with(Name/@Image, '.equals') and Name/@Image != 'Arrays.equals'] | //PrimarySuffix[@Image='equals' and not(../PrimaryPrefix/Literal)])\n /following-sibling::PrimarySuffix/Arguments/ArgumentList/Expression\n /PrimaryExpression[count(PrimarySuffix)=0]/PrimaryPrefix\n /Name[@Image = ./../../../../../../../../../../Expression/ConditionalAndExpression\n /EqualityExpression[@Image=\"!=\" and count(./preceding-sibling::*)=0 and\n ./PrimaryExpression/PrimaryPrefix/Literal/NullLiteral]\n  /PrimaryExpression/PrimaryPrefix/Name/@Image]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_BooleanGetMethodName",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//MethodDeclaration[\nMethodDeclarator[count(FormalParameters/FormalParameter) = 0 or $checkParameterizedMethods = 'true']\n                [starts-with(@Image, 'get')]\nand\nResultType/Type/PrimitiveType[@Image = 'boolean']\nand not(../Annotation//Name[@Image = 'Override'])\n]\n\n                "
    }, {
      "name" : "checkParameterizedMethods",
      "default" : "false"
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_JumbledIncrementer",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n//ForStatement\n  [\n    ForUpdate/StatementExpressionList/StatementExpression/PostfixExpression/PrimaryExpression/PrimaryPrefix/Name/@Image\n    =\n    ancestor::ForStatement/ForInit//VariableDeclaratorId/@Image\n  ]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_design_NPathComplexity",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_multithreading_UnsynchronizedStaticDateFormatter",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_bestpractices_DefaultLabelNotLastInSwitchStmt",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//SwitchStatement\n [not(SwitchLabel[position() = last()][@Default='true'])]\n [SwitchLabel[@Default='true']]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_DoNotExtendJavaLangThrowable",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ClassOrInterfaceDeclaration/ExtendsList/ClassOrInterfaceType\n  [@Image=\"Throwable\" or @Image=\"java.lang.Throwable\"]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_AvoidAssertAsIdentifier",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "//VariableDeclaratorId[@Image='assert']"
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_bestpractices_AvoidReassigningParameters",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_UnnecessaryReturn",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_ProperCloneImplementation",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//MethodDeclarator\n[@Image = 'clone']\n[count(FormalParameters/*) = 0]\n[count(../Block//*[\n    (self::AllocationExpression) and\n    (./ClassOrInterfaceType/@Image = ancestor::\nClassOrInterfaceDeclaration[1]/@Image)\n  ])> 0\n]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_FinalizeShouldBeProtected",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//MethodDeclaration[@Protected=\"false\"]\n  /MethodDeclarator[@Image=\"finalize\"]\n  [not(FormalParameters/*)]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_performance_BigIntegerInstantiation",
    "level" : "Warning",
    "category" : "Performance",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_apex_bestpractices_AvoidLogicInTrigger",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_java_design_SimplifyBooleanAssertion",
    "level" : "Warning",
    "category" : "ErrorProne",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//StatementExpression\n[\n.//Name[@Image='assertTrue' or  @Image='assertFalse']\nand\nPrimaryExpression/PrimarySuffix/Arguments/ArgumentList\n /Expression/UnaryExpressionNotPlusMinus[@Image='!']\n/PrimaryExpression/PrimaryPrefix\n]\n[ancestor::ClassOrInterfaceDeclaration[//ClassOrInterfaceType[pmd-java:typeof(@Image, 'junit.framework.TestCase','TestCase')] or //MarkerAnnotation/Name[pmd-java:typeof(@Image, 'org.junit.Test', 'Test')]]]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_DontImportJavaLang",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_apex_security_ApexSuggestUsingNamedCred",
    "level" : "Error",
    "category" : "Security",
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_java_errorprone_UselessOperationOnImmutable",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_vm_design_NoInlineJavaScript",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "velocity" ]
  }, {
    "patternId" : "category_apex_errorprone_EmptyStatementBlock",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//Method/ModifierNode[@Abstract!='true' and ../BlockStatement[count(*) = 0]]\n| //Method/BlockStatement//BlockStatement[count(*) = 0 and @Location != parent::*/@Location]\n\n                "
    } ],
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_apex_errorprone_EmptyWhileStmt",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//WhileLoopStatement[./BlockStatement[count(*) = 0]]\n\n                "
    } ],
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_java_codestyle_RemoteInterfaceNamingConvention",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ClassOrInterfaceDeclaration\n[\n    (\n        (./ExtendsList/ClassOrInterfaceType[ends-with(@Image,'EJBObject')])\n    )\n    and\n    (\n        ends-with(@Image,'Session')\n        or\n        ends-with(@Image,'EJB')\n        or\n        ends-with(@Image,'Bean')\n    )\n]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_CloneMethodReturnTypeMustMatchClassName",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//MethodDeclaration\n[\nMethodDeclarator/@Image = 'clone'\nand MethodDeclarator/FormalParameters/@ParameterCount = 0\nand not (ResultType//ClassOrInterfaceType/@Image = ancestor::ClassOrInterfaceDeclaration[1]/@Image)\n]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_vm_bestpractices_AvoidReassigningParameters",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "velocity" ]
  }, {
    "patternId" : "category_java_design_ImmutableField",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_AvoidFinalLocalVariable",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//LocalVariableDeclaration[\n  @Final = 'true'\n  and not(../../ForStatement)\n  and\n  (\n    (count(VariableDeclarator/VariableInitializer) = 0)\n    or\n    (VariableDeclarator/VariableInitializer/Expression/PrimaryExpression/PrimaryPrefix/Literal)\n  )\n]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_apex_bestpractices_AvoidGlobalModifier",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_java_design_SimplifyBooleanReturns",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_performance_ShortInstantiation",
    "level" : "Warning",
    "category" : "Performance",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//PrimaryPrefix\n/AllocationExpression\n[not (ArrayDimsAndInits)\nand (ClassOrInterfaceType/@Image='Short'\nor ClassOrInterfaceType/@Image='java.lang.Short')]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_bestpractices_ForLoopCanBeForeach",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_GenericsNaming",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//TypeDeclaration/ClassOrInterfaceDeclaration/TypeParameters/TypeParameter[\n  string-length(@Image) > 1 \n  or\n  string:upper-case(@Image) != @Image\n]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_apex_design_ExcessivePublicCount",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_java_bestpractices_GuardLogStatement",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_MissingBreakInSwitch",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//SwitchStatement\n[(count(.//BreakStatement)\n + count(BlockStatement//Statement/ReturnStatement)\n + count(BlockStatement//Statement/ContinueStatement)\n + count(BlockStatement//Statement/ThrowStatement)\n + count(BlockStatement//Statement/IfStatement[@Else='true' and Statement[2][ReturnStatement|ContinueStatement|ThrowStatement]]/Statement[1][ReturnStatement|ContinueStatement|ThrowStatement])\n + count(SwitchLabel[name(following-sibling::node()) = 'SwitchLabel'])\n + count(SwitchLabel[count(following-sibling::node()) = 0])\n  < count (SwitchLabel))]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_UseLocaleWithCaseConversions",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//PrimaryExpression\n[\nPrimaryPrefix\n[Name[ends-with(@Image, 'toLowerCase') or ends-with(@Image, 'toUpperCase')]]\n[following-sibling::PrimarySuffix[position() = 1]/Arguments[@ArgumentCount=0]]\n\nor\n\nPrimarySuffix\n[ends-with(@Image, 'toLowerCase') or ends-with(@Image, 'toUpperCase')]\n[following-sibling::PrimarySuffix[position() = 1]/Arguments[@ArgumentCount=0]]\n]\n[not(PrimaryPrefix/Name[ends-with(@Image, 'toHexString')])]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_UselessQualifiedThis",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//PrimaryExpression\n[PrimaryPrefix/Name[@Image]]\n[PrimarySuffix[@Arguments='false']]\n[not(PrimarySuffix/MemberSelector)]\n[ancestor::ClassOrInterfaceBodyDeclaration[1][@AnonymousInnerClass='false']]\n/PrimaryPrefix/Name[@Image = ancestor::ClassOrInterfaceDeclaration[1]/@Image]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_performance_StringInstantiation",
    "level" : "Warning",
    "category" : "Performance",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_design_AvoidThrowingNullPointerException",
    "level" : "Warning",
    "category" : "ErrorProne",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//AllocationExpression/ClassOrInterfaceType[@Image='NullPointerException']\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_apex_design_ExcessiveClassLength",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_java_errorprone_AvoidDecimalLiteralsInBigDecimalConstructor",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//AllocationExpression\n[ClassOrInterfaceType[@Image=\"BigDecimal\"]]\n[Arguments/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix\n    [\n        Literal[(not(ends-with(@Image,'\"'))) and contains(@Image,\".\")]\n        or\n        Name[ancestor::Block/BlockStatement/LocalVariableDeclaration\n                [Type[PrimitiveType[@Image='double' or @Image='float']\n                      or ReferenceType/ClassOrInterfaceType[@Image='Double' or @Image='Float']]]\n                /VariableDeclarator/VariableDeclaratorId/@Image = @Image\n            ]\n        or\n        Name[ancestor::MethodDeclaration/MethodDeclarator/FormalParameters/FormalParameter\n                [Type[PrimitiveType[@Image='double' or @Image='float']\n                      or ReferenceType/ClassOrInterfaceType[@Image='Double' or @Image='Float']]]\n                /VariableDeclaratorId/@Image = @Image\n            ]\n    ]\n]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_TestClassWithoutTestCases",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_design_DoNotExtendJavaLangError",
    "level" : "Warning",
    "category" : "ErrorProne",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ClassOrInterfaceDeclaration/ExtendsList/ClassOrInterfaceType\n  [@Image=\"Error\" or @Image=\"java.lang.Error\"]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_ReturnEmptyArrayRatherThanNull",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//MethodDeclaration\n[\n(./ResultType/Type[@Array='true'])\nand\n(./Block/BlockStatement/Statement/ReturnStatement/Expression/PrimaryExpression/PrimaryPrefix/Literal/NullLiteral)\n]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_EmptyWhileStmt",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//WhileStatement/Statement[./Block[count(*) = 0]  or ./EmptyStatement]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_bestpractices_JUnit4TestShouldUseBeforeAnnotation",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//CompilationUnit[not(ImportDeclaration/Name[starts-with(@Image, \"org.testng\")])]\n//ClassOrInterfaceBodyDeclaration[MethodDeclaration/MethodDeclarator[@Image='setUp']]\n[count(Annotation//Name[@Image='Before'])=0]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_AvoidFieldNameMatchingMethodName",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_performance_AvoidInstantiatingObjectsInLoops",
    "level" : "Warning",
    "category" : "Performance",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_plsql_design_TooManyFields",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "plsql" ]
  }, {
    "patternId" : "category_java_performance_BooleanInstantiation",
    "level" : "Warning",
    "category" : "Performance",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_bestpractices_AbstractClassWithoutAbstractMethod",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ClassOrInterfaceDeclaration\n [@Abstract='true'\n  and count( .//MethodDeclaration[@Abstract='true'] )=0 ]\n  [count(ImplementsList)=0]\n  [count(.//ExtendsList)=0]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_UseProperClassLoader",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "//PrimarySuffix[@Image='getClassLoader']"
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_design_AvoidThrowingRawExceptionTypes",
    "level" : "Warning",
    "category" : "ErrorProne",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ThrowStatement//AllocationExpression\n /ClassOrInterfaceType[\n (@Image='Throwable' and count(//ImportDeclaration/Name[ends-with(@Image,'Throwable')]) = 0)\nor\n (@Image='Exception' and count(//ImportDeclaration/Name[ends-with(@Image,'Exception')]) = 0)\nor\n (@Image='Error'  and count(//ImportDeclaration/Name[ends-with(@Image,'Error')]) = 0)\nor\n( @Image='RuntimeException'  and count(//ImportDeclaration/Name[ends-with(@Image,'RuntimeException')]) = 0)\n]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_ForLoopsMustUseBraces",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "//ForStatement[not(Statement/Block)]"
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_design_AvoidDeeplyNestedIfStmts",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_apex_security_ApexXSSFromURLParam",
    "level" : "Error",
    "category" : "Security",
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_apex_design_NcssMethodCount",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_java_design_SimplifyConditional",
    "level" : "Warning",
    "category" : "ErrorProne",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//Expression\n [ConditionalOrExpression\n [EqualityExpression[@Image='==']\n  //NullLiteral\n  and\n  UnaryExpressionNotPlusMinus\n   [@Image='!']//InstanceOfExpression[PrimaryExpression\n     //Name/@Image = ancestor::ConditionalOrExpression/EqualityExpression\n      /PrimaryExpression/PrimaryPrefix/Name/@Image]\n  and\n  (count(UnaryExpressionNotPlusMinus) + 1 = count(*))\n ]\nor\nConditionalAndExpression\n [EqualityExpression[@Image='!=']//NullLiteral\n and\nInstanceOfExpression\n [PrimaryExpression[count(PrimarySuffix[@ArrayDereference='true'])=0]\n  //Name[not(contains(@Image,'.'))]/@Image = ancestor::ConditionalAndExpression\n   /EqualityExpression/PrimaryExpression/PrimaryPrefix/Name/@Image]\n and\n(count(InstanceOfExpression) + 1 = count(*))\n ]\n]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_jsp_security_IframeMissingSrcAttribute",
    "level" : "Error",
    "category" : "Security",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//Element[upper-case(@Name)=\"IFRAME\"][count(Attribute[upper-case(@Name)=\"SRC\" ]) = 0]\n\n                "
    } ],
    "languages" : [ "jsp" ]
  }, {
    "patternId" : "category_java_errorprone_MethodWithSameNameAsEnclosingClass",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_performance_InefficientEmptyStringCheck",
    "level" : "Warning",
    "category" : "Performance",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_LocalVariableCouldBeFinal",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_apex_errorprone_MethodWithSameNameAsEnclosingClass",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_java_errorprone_NullAssignment",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_bestpractices_AccessorMethodGeneration",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_MethodNamingConventions",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_apex_errorprone_EmptyIfStmt",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//IfBlockStatement\n [BlockStatement[count(*) = 0]]\n\n                "
    } ],
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_java_documentation_UncommentedEmptyMethodBody",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//MethodDeclaration/Block[count(BlockStatement) = 0 and @containsComment = 'false']\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_ReturnFromFinallyBlock",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "//FinallyStatement//ReturnStatement"
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_design_ExcessivePublicCount",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_design_DataClass",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_CallSuperFirst",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//MethodDeclaration[MethodDeclarator[\n  @Image='onCreate' or\n  @Image='onConfigurationChanged' or\n  @Image='onPostCreate' or\n  @Image='onPostResume' or\n  @Image='onRestart' or\n  @Image='onRestoreInstanceState' or\n  @Image='onResume' or\n  @Image='onStart'\n  ]]\n    /Block[not(\n      (BlockStatement[1]/Statement/StatementExpression/PrimaryExpression[./PrimaryPrefix[@SuperModifier='true']]/PrimarySuffix[@Image= ancestor::MethodDeclaration/MethodDeclarator/@Image]))]\n[ancestor::ClassOrInterfaceDeclaration[ExtendsList/ClassOrInterfaceType[\n  typeof(@Image, 'android.app.Activity', 'Activity') or\n  typeof(@Image, 'android.app.Application', 'Application') or\n  typeof(@Image, 'android.app.Service', 'Service')\n]]]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_ecmascript_codestyle_IfElseStmtsMustUseBraces",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//ExpressionStatement[parent::IfStatement[@Else = \"true\"]]\n   [not(child::Scope)]\n   [not(child::IfStatement)]\n\n                "
    } ],
    "languages" : [ "javascript" ]
  }, {
    "patternId" : "category_java_bestpractices_ConstantsInInterface",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "ignoreIfHasMethods",
      "default" : "true"
    }, {
      "name" : "xpath",
      "default" : "\n\n//ClassOrInterfaceDeclaration[@Interface='true'][$ignoreIfHasMethods='false' or not(.//MethodDeclaration)]//FieldDeclaration\n \n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_UseCorrectExceptionLogging",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//CatchStatement/Block/BlockStatement/Statement/StatementExpression\n/PrimaryExpression[PrimaryPrefix/Name[starts-with(@Image,\nconcat(ancestor::ClassOrInterfaceDeclaration/ClassOrInterfaceBody/ClassOrInterfaceBodyDeclaration/FieldDeclaration\n[Type//ClassOrInterfaceType[@Image='Log']]\n/VariableDeclarator/VariableDeclaratorId/@Image, '.'))]]\n[PrimarySuffix/Arguments[@ArgumentCount='1']]\n[PrimarySuffix/Arguments//Name/@Image = ancestor::CatchStatement/FormalParameter/VariableDeclaratorId/@Image]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_errorprone_FinalizeOverloaded",
    "level" : "Warning",
    "category" : "CodeStyle",
    "parameters" : [ {
      "name" : "xpath",
      "default" : "\n\n//MethodDeclaration\n /MethodDeclarator[@Image='finalize'][FormalParameters[count(*)>0]]\n\n                "
    } ],
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_java_codestyle_UnnecessaryModifier",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_apex_design_ExcessiveParameterList",
    "level" : "Warning",
    "category" : "ErrorProne",
    "languages" : [ "apex" ]
  }, {
    "patternId" : "category_java_errorprone_DataflowAnomalyAnalysis",
    "level" : "Warning",
    "category" : "CodeStyle",
    "languages" : [ "java" ]
  }, {
    "patternId" : "category_vm_design_ExcessiveTemplateLength",
    "level" : "Warning",
    "category" : "ErrorProne",
    "parameters" : [ {
      "name" : "minimum",
      "default" : "1000"
    } ],
    "languages" : [ "velocity" ]
  } ]
}