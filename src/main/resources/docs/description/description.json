[ {
  "patternId" : "category_java_errorprone_CloneMethodMustBePublic",
  "title" : "clone() method must be public if the class implements Cloneable",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_AvoidUsingOctalValues",
  "title" : "Do not start a literal by 0 unless it's an octal value"
}, {
  "patternId" : "category_java_performance_UseStringBufferLength",
  "title" : "This is an inefficient use of StringBuffer.toString; call StringBuffer.length instead."
}, {
  "patternId" : "category_jsp_design_NoScriptlets",
  "title" : "Avoid having scriptlets inside a JSP file.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_AvoidLiteralsInIfCondition",
  "title" : "Avoid using Literals in Conditional Statements",
  "parameters" : [ {
    "name" : "ignoreMagicNumbers",
    "description" : "Comma-separated list of magic numbers, that should be ignored"
  }, {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_bestpractices_ForLoopCanBeForeach",
  "title" : "This 'for' loop can be replaced by a 'foreach' loop"
}, {
  "patternId" : "category_java_bestpractices_AvoidStringBufferField",
  "title" : "StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_jsp_errorprone_JspEncoding",
  "title" : "JSP file should use UTF-8 encoding",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_performance_ConsecutiveAppendsShouldReuse",
  "title" : "StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable."
}, {
  "patternId" : "category_apex_bestpractices_ApexUnitTestClassShouldHaveAsserts",
  "title" : "Apex unit tests should System.assert() or assertEquals() or assertNotEquals()"
}, {
  "patternId" : "category_java_bestpractices_PositionLiteralsFirstInComparisons",
  "title" : "Position literals first in String comparisons",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_codestyle_PrematureDeclaration",
  "title" : "Avoid declaring a variable if it is unreferenced before a possible exit point."
}, {
  "patternId" : "category_java_bestpractices_SystemPrintln",
  "title" : "{0} is used",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_performance_UseArrayListInsteadOfVector",
  "title" : "Use ArrayList instead of Vector",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_MissingStaticMethodInNonInstantiatableClass",
  "title" : "Class cannot be instantiated and does not provide any static methods or fields",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_performance_AvoidInstantiatingObjectsInLoops",
  "title" : "Avoid instantiating new objects inside loops"
}, {
  "patternId" : "category_java_errorprone_EmptyCatchBlock",
  "title" : "Avoid empty catch blocks",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  }, {
    "name" : "allowCommentedBlocks",
    "description" : "Empty blocks containing comments will be skipped"
  }, {
    "name" : "allowExceptionNameRegex",
    "description" : "Empty blocks catching exceptions with names matching this regular expression will be skipped"
  } ]
}, {
  "patternId" : "category_java_errorprone_UselessOperationOnImmutable",
  "title" : "An operation on an Immutable object (String, BigDecimal or BigInteger) won't change the object itself"
}, {
  "patternId" : "category_java_codestyle_IfStmtsMustUseBraces",
  "title" : "Avoid using if statements without curly braces",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_documentation_UncommentedEmptyConstructor",
  "title" : "Document empty constructor",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  }, {
    "name" : "ignoreExplicitConstructorInvocation",
    "description" : "Ignore explicit constructor invocation when deciding whether constructor is empty or not"
  } ]
}, {
  "patternId" : "category_java_bestpractices_UseAssertSameInsteadOfAssertTrue",
  "title" : "Use assertSame(x, y) instead of assertTrue(x==y), or assertNotSame(x,y) vs assertFalse(x==y)",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_JUnitStaticSuite",
  "title" : "You have a suite() method that is not both public and static, so JUnit won't call it to get your TestSuite.  Is that what you wanted to do?",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_vf_security_VfUnescapeEl",
  "title" : "Avoid unescaped user controlled content in EL"
}, {
  "patternId" : "category_java_design_SignatureDeclareThrowsException",
  "title" : "A method/constructor should not explicitly throw java.lang.Exception"
}, {
  "patternId" : "category_java_multithreading_DoubleCheckedLocking",
  "title" : "Double checked locking is not thread safe in Java."
}, {
  "patternId" : "category_java_errorprone_IdempotentOperations",
  "title" : "Avoid idempotent operations (like assigning a variable to itself)."
}, {
  "patternId" : "category_apex_codestyle_IfStmtsMustUseBraces",
  "title" : "Avoid using if statements without curly braces",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_design_AvoidThrowingNewInstanceOfSameException",
  "title" : "A catch statement that catches an exception only to wrap it in a new instance of the same type of exception and throw it should be avoided",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_jsp_bestpractices_NoClassAttribute",
  "title" : "Do not use an attribute called 'class'.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_SuspiciousOctalEscape",
  "title" : "Suspicious decimal characters following octal escape in string literal"
}, {
  "patternId" : "category_vm_errorprone_EmptyIfStmt",
  "title" : "Avoid empty if statements"
}, {
  "patternId" : "category_java_design_NcssCount",
  "title" : "The {0} ''{1}'' has a NCSS line count of {2}."
}, {
  "patternId" : "category_jsp_security_NoUnsanitizedJSPExpression",
  "title" : "Using unsanitized JSP expression can lead to Cross Site Scripting (XSS) attacks"
}, {
  "patternId" : "category_apex_bestpractices_ApexUnitTestShouldNotUseSeeAllDataTrue",
  "title" : "Apex unit tests should not use @isTest(seeAllData = true)"
}, {
  "patternId" : "category_vm_bestpractices_UnusedMacroParameter",
  "title" : "Avoid unused macro parameters such as ''{0}''"
}, {
  "patternId" : "category_java_multithreading_AvoidUsingVolatile",
  "title" : "Use of modifier volatile is not recommended.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_plsql_errorprone_TO_DATEWithoutDateFormat",
  "title" : "TO_DATE without date format",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_xml_errorprone_MistypedCDATASection",
  "title" : "Potentialy mistyped CDATA section with extra [ at beginning or ] at the end.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_apex_design_AvoidDeeplyNestedIfStmts",
  "title" : "Deeply nested if..then statements are hard to read"
}, {
  "patternId" : "category_java_errorprone_EmptyStatementBlock",
  "title" : "Avoid empty block statements.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_vf_security_VfCsrf",
  "title" : "Avoid calling VF action upon page load"
}, {
  "patternId" : "category_ecmascript_errorprone_AvoidTrailingComma",
  "title" : "Avoid trailing commas in object or array literals",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  }, {
    "name" : "allowObjectLiteral",
    "description" : "Allow a trailing comma within an object literal"
  }, {
    "name" : "allowArrayLiteral",
    "description" : "Allow a trailing comma within an array literal"
  } ]
}, {
  "patternId" : "category_java_design_SimplifyBooleanExpressions",
  "title" : "Avoid unnecessary comparisons in boolean expressions",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_apex_performance_AvoidSoslInLoops",
  "title" : "Avoid Sosl queries inside loops"
}, {
  "patternId" : "category_java_errorprone_AvoidAssertAsIdentifier",
  "title" : "Avoid using assert as an identifier; it became a reserved word in JDK 1.4",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_jsp_codestyle_DuplicateJspImports",
  "title" : "Avoid duplicate imports such as ''{0}''"
}, {
  "patternId" : "category_apex_codestyle_MethodNamingConventions",
  "title" : "Method name does not begin with a lower case character."
}, {
  "patternId" : "category_plsql_design_ExcessiveObjectLength",
  "title" : "Avoid really long Oracle object specifications and bodies ({0} lines found)."
}, {
  "patternId" : "category_java_errorprone_SingleMethodSingleton",
  "title" : "Class contains multiple getInstance methods. Please review."
}, {
  "patternId" : "category_java_bestpractices_JUnitUseExpected",
  "title" : "In JUnit4, use the @Test(expected) annotation to denote tests that should throw exceptions"
}, {
  "patternId" : "category_java_performance_UseIndexOfChar",
  "title" : "String.indexOf(char) is faster than String.indexOf(String)."
}, {
  "patternId" : "category_java_errorprone_BrokenNullCheck",
  "title" : "Method call on object which may be null"
}, {
  "patternId" : "category_java_errorprone_AvoidCatchingNPE",
  "title" : "Avoid catching NullPointerException; consider removing the cause of the NPE.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_apex_performance_AvoidDmlStatementsInLoops",
  "title" : "Avoid DML statements inside loops"
}, {
  "patternId" : "category_apex_errorprone_EmptyStatementBlock",
  "title" : "Avoid empty block statements.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_SimpleDateFormatNeedsLocale",
  "title" : "When instantiating a SimpleDateFormat object, specify a Locale",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_apex_bestpractices_AvoidLogicInTrigger",
  "title" : "Avoid logic in triggers"
}, {
  "patternId" : "category_java_bestpractices_LooseCoupling",
  "title" : "Avoid using implementation types like ''{0}''; use the interface instead"
}, {
  "patternId" : "category_java_design_AvoidThrowingNullPointerException",
  "title" : "Avoid throwing null pointer exceptions.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_performance_OptimizableToArrayCall",
  "title" : "This call to Collection.toArray() may be optimizable",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_NullAssignment",
  "title" : "Assigning an Object to null is a code smell.  Consider refactoring."
}, {
  "patternId" : "category_java_design_SimplifiedTernary",
  "title" : "Ternary operators that can be simplified with || or &&",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_AvoidDuplicateLiterals",
  "title" : "The String literal {0} appears {1} times in this file; the first occurrence is on line {2}"
}, {
  "patternId" : "category_java_design_SimplifyBooleanReturns",
  "title" : "Avoid unnecessary if..then..else statements when returning booleans"
}, {
  "patternId" : "category_java_documentation_CommentRequired",
  "title" : "Comment is required"
}, {
  "patternId" : "category_java_errorprone_DoNotCallGarbageCollectionExplicitly",
  "title" : "Do not explicitly trigger a garbage collection.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_DataflowAnomalyAnalysis",
  "title" : "Found ''{0}''-anomaly for variable ''{1}'' (lines ''{2}''-''{3}'')."
}, {
  "patternId" : "category_java_errorprone_BeanMembersShouldSerialize",
  "title" : "Found non-transient, non-static member. Please mark as transient or provide accessors."
}, {
  "patternId" : "category_apex_security_ApexDangerousMethods",
  "title" : "Calling potentially dangerous method"
}, {
  "patternId" : "category_java_errorprone_AvoidBranchingStatementAsLastInLoop",
  "title" : "Avoid using a branching statement as the last in a loop."
}, {
  "patternId" : "category_java_performance_StringInstantiation",
  "title" : "Avoid instantiating String objects; this is usually unnecessary."
}, {
  "patternId" : "category_java_design_AvoidThrowingRawExceptionTypes",
  "title" : "Avoid throwing raw exception types.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_ecmascript_codestyle_NoElseReturn",
  "title" : "The else block is unnecessary",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_AvoidFieldNameMatchingTypeName",
  "title" : "It is somewhat confusing to have a field name matching the declaring class name"
}, {
  "patternId" : "category_java_codestyle_LocalVariableCouldBeFinal",
  "title" : "Local variable ''{0}'' could be declared final"
}, {
  "patternId" : "category_ecmascript_codestyle_ForLoopsMustUseBraces",
  "title" : "Avoid using 'for' statements without curly braces",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_performance_AvoidUsingShortType",
  "title" : "Do not use the short type",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_bestpractices_AbstractClassWithoutAbstractMethod",
  "title" : "This abstract class does not have any abstract methods",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_FinalizeShouldBeProtected",
  "title" : "If you override finalize(), make it protected",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_AssignmentInOperand",
  "title" : "Avoid assignments in operands"
}, {
  "patternId" : "category_apex_security_ApexXSSFromURLParam",
  "title" : "Apex classes should escape/sanitize Strings obtained from URL parameters"
}, {
  "patternId" : "category_java_bestpractices_UseAssertEqualsInsteadOfAssertTrue",
  "title" : "Use assertEquals(x, y) instead of assertTrue(x.equals(y))",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_design_ExcessiveClassLength",
  "title" : "Avoid really long classes."
}, {
  "patternId" : "category_ecmascript_bestpractices_UseBaseWithParseInt",
  "title" : "Always provide a base when using parseInt() functions",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_apex_design_NcssTypeCount",
  "title" : "The type has an NCSS line count of {0}"
}, {
  "patternId" : "category_java_errorprone_UseCorrectExceptionLogging",
  "title" : "Use the correct logging statement for logging exceptions",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_codestyle_IfElseStmtsMustUseBraces",
  "title" : "Avoid using 'if...else' statements without curly braces",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_plsql_errorprone_TO_TIMESTAMPWithoutDateFormat",
  "title" : "TO_TIMESTAMP without date format",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_apex_design_CyclomaticComplexity",
  "title" : "The {0} ''{1}'' has a{2} cyclomatic complexity of {3}."
}, {
  "patternId" : "category_java_errorprone_NonStaticInitializer",
  "title" : "Non-static initializers are confusing",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_performance_InefficientStringBuffering",
  "title" : "Avoid concatenating nonliterals in a StringBuffer/StringBuilder constructor or append()."
}, {
  "patternId" : "category_java_codestyle_ShortVariable",
  "title" : "Avoid variables with short names like {0}",
  "parameters" : [ {
    "name" : "minimum",
    "description" : "Number of characters that are required as a minimum for a variable name."
  }, {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_design_NPathComplexity",
  "title" : "The {0} ''{1}'' has an NPath complexity of {2}"
}, {
  "patternId" : "category_java_codestyle_ClassNamingConventions",
  "title" : "Class names should begin with an uppercase character"
}, {
  "patternId" : "category_vm_design_CollapsibleIfStatements",
  "title" : "These nested if statements could be combined"
}, {
  "patternId" : "category_java_codestyle_ShortClassName",
  "title" : "Avoid short class names like {0}",
  "parameters" : [ {
    "name" : "minimum",
    "description" : "Number of characters that are required as a minimum for a class name."
  }, {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_FinalizeDoesNotCallSuperFinalize",
  "title" : "Last statement in finalize method should be a call to super.finalize()",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_bestpractices_MethodReturnsInternalArray",
  "title" : "Returning ''{0}'' may expose an internal array."
}, {
  "patternId" : "category_java_errorprone_AvoidInstanceofChecksInCatchClause",
  "title" : "An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_CloseResource",
  "title" : "Ensure that resources like this {0} object are closed after use"
}, {
  "patternId" : "category_java_design_SimplifyConditional",
  "title" : "No need to check for null before an instanceof",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_bestpractices_CheckResultSet",
  "title" : "Always check the return of one of the navigation method (next,previous,first,last) of a ResultSet."
}, {
  "patternId" : "category_java_errorprone_CallSuperFirst",
  "title" : "super should be called at the start of the method",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_design_AvoidRethrowingException",
  "title" : "A catch statement that catches an exception only to rethrow it should be avoided.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_ecmascript_codestyle_UnnecessaryParentheses",
  "title" : "Unnecessary parentheses.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_codestyle_MethodNamingConventions",
  "title" : "Method name does not begin with a lower case character."
}, {
  "patternId" : "category_java_codestyle_LocalInterfaceSessionNamingConvention",
  "title" : "The Local Interface of a Session EJB should be suffixed by 'Local'",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_AvoidFieldNameMatchingMethodName",
  "title" : "Field {0} has the same name as a method"
}, {
  "patternId" : "category_java_bestpractices_ReplaceVectorWithList",
  "title" : "Consider replacing this Vector with the newer java.util.List",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_codestyle_RemoteInterfaceNamingConvention",
  "title" : "Remote Interface of a Session EJB should NOT be suffixed",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_plsql_design_ExcessiveMethodLength",
  "title" : "Avoid really long methods ({0} lines found)."
}, {
  "patternId" : "category_java_codestyle_UnnecessaryConstructor",
  "title" : "Avoid unnecessary constructors - the compiler will generate these for you",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_jsp_bestpractices_DontNestJsfInJstlIteration",
  "title" : "Do not nest JSF component custom actions inside a custom action that iterates over its body.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_CloneMethodMustImplementCloneable",
  "title" : "clone() method should be implemented only if implementing Cloneable interface"
}, {
  "patternId" : "category_java_codestyle_AvoidDollarSigns",
  "title" : "Avoid using dollar signs in variable/method/class/interface names"
}, {
  "patternId" : "category_plsql_errorprone_TO_DATE_TO_CHAR",
  "title" : "TO_DATE(TO_CHAR(variable)) instead of TRUNC(variable)",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_documentation_CommentContent",
  "title" : "Invalid words or phrases found"
}, {
  "patternId" : "category_apex_security_ApexBadCrypto",
  "title" : "Apex classes should use random IV/key"
}, {
  "patternId" : "category_java_errorprone_MissingSerialVersionUID",
  "title" : "Classes implementing Serializable should set a serialVersionUID",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_performance_AddEmptyString",
  "title" : "Do not add empty strings",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_ecmascript_bestpractices_ScopeForInVariable",
  "title" : "The for-in loop variable ''{0}'' should be explicitly scoped with 'var' to avoid pollution.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_design_UselessOverridingMethod",
  "title" : "Overriding method merely calls super"
}, {
  "patternId" : "category_java_codestyle_ForLoopsMustUseBraces",
  "title" : "Avoid using 'for' statements without curly braces",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_vm_design_AvoidDeeplyNestedIfStmts",
  "title" : "Deeply nested if..then statements are hard to read"
}, {
  "patternId" : "category_java_bestpractices_ConstantsInInterface",
  "title" : "Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.",
  "parameters" : [ {
    "name" : "ignoreIfHasMethods",
    "description" : "Whether to ignore constants in interfaces if the interface defines any methods"
  }, {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_apex_security_ApexCSRF",
  "title" : "Avoid making DML operations in Apex class constructor/init method"
}, {
  "patternId" : "category_java_bestpractices_AvoidPrintStackTrace",
  "title" : "Avoid printStackTrace(); use a logger call instead.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_bestpractices_AvoidUsingHardCodedIP",
  "title" : "Do not hard code the IP address ${variableName}",
  "parameters" : [ {
    "name" : "pattern",
    "description" : "Regular Expression"
  } ]
}, {
  "patternId" : "category_java_codestyle_EmptyMethodInAbstractClassShouldBeAbstract",
  "title" : "An empty method in an abstract class should be abstract instead",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_codestyle_UnnecessaryFullyQualifiedName",
  "title" : "Unnecessary use of fully qualified name ''{0}'' due to existing {2}import ''{1}''"
}, {
  "patternId" : "category_java_errorprone_JUnitSpelling",
  "title" : "You may have misspelled a JUnit framework method (setUp or tearDown)",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_plsql_codestyle_MisplacedPragma",
  "title" : "Pragma should be used only inside the declaration block before 'BEGIN'.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_performance_BooleanInstantiation",
  "title" : "Avoid instantiating Boolean objects; reference Boolean.TRUE or Boolean.FALSE or call Boolean.valueOf() instead."
}, {
  "patternId" : "category_java_codestyle_DefaultPackage",
  "title" : "Use explicit scoping instead of the default package private level",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_DoNotCallSystemExit",
  "title" : "System.exit() should not be used in J2EE/JEE apps",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_DoNotHardCodeSDCard",
  "title" : "Do not hardcode /sdcard.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_bestpractices_JUnitTestsShouldIncludeAssert",
  "title" : "JUnit tests should include assert() or fail()"
}, {
  "patternId" : "category_java_performance_TooFewBranchesForASwitchStatement",
  "title" : "A switch with less than three branches is inefficient, use a 'if statement' instead.",
  "parameters" : [ {
    "name" : "minimumNumberCaseForASwitch",
    "description" : "Minimum number of branches for a switch"
  }, {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_ConstructorCallsOverridableMethod",
  "title" : "Overridable {0} called during object construction"
}, {
  "patternId" : "category_java_errorprone_CloneMethodReturnTypeMustMatchClassName",
  "title" : "The return type of the clone() method must be the class name when implements Cloneable",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_CheckSkipResult",
  "title" : "Check the value returned by the skip() method of an InputStream to see if the requested number of bytes has been skipped."
}, {
  "patternId" : "category_java_errorprone_EqualsNull",
  "title" : "Avoid using equals() to compare against null",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_plsql_design_ExcessivePackageSpecificationLength",
  "title" : "Avoid really long Package Specifications ({0} lines found)."
}, {
  "patternId" : "category_java_codestyle_ExtendsObject",
  "title" : "No need to explicitly extend Object.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_plsql_design_TooManyFields",
  "title" : "Too many fields"
}, {
  "patternId" : "category_java_multithreading_UseConcurrentHashMap",
  "title" : "If you run in Java5 or newer and have concurrent access, you should use the ConcurrentHashMap implementation",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_bestpractices_PreserveStackTrace",
  "title" : "New exception is thrown in catch block, original stack trace may be lost"
}, {
  "patternId" : "category_ecmascript_errorprone_EqualComparison",
  "title" : "Use '==='/'!==' to compare with true/false or Numbers",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_LoggerIsNotStaticFinal",
  "title" : "The Logger variable declaration does not contain the static and final modifiers",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_bestpractices_PositionLiteralsFirstInCaseInsensitiveComparisons",
  "title" : "Position literals first in String comparisons for EqualsIgnoreCase",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_codestyle_UselessParentheses",
  "title" : "Useless parentheses.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_bestpractices_JUnitTestContainsTooManyAsserts",
  "title" : "JUnit tests should not contain more than ${maximumAsserts} assert(s).",
  "parameters" : [ {
    "name" : "maximumAsserts",
    "description" : "Maximum number of Asserts in a test method"
  }, {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_ecmascript_bestpractices_ConsistentReturn",
  "title" : "A function should not mix 'return' statements with and without a result."
}, {
  "patternId" : "category_java_errorprone_AssignmentToNonFinalStatic",
  "title" : "Possible unsafe assignment to a non-final static field in a constructor."
}, {
  "patternId" : "category_java_design_UseObjectForClearerAPI",
  "title" : "Rather than using a lot of String arguments, consider using a container object for those values.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_ecmascript_bestpractices_AvoidWithStatement",
  "title" : "Avoid using with - it's bad news",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_bestpractices_ReplaceHashtableWithMap",
  "title" : "Consider replacing this Hashtable with the newer java.util.Map",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_UseEqualsToCompareStrings",
  "title" : "Use equals() to compare strings instead of ''=='' or ''!=''",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_codestyle_FieldDeclarationsShouldBeAtStartOfClass",
  "title" : "Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes."
}, {
  "patternId" : "category_java_errorprone_JumbledIncrementer",
  "title" : "Avoid modifying an outer loop incrementer in an inner loop for update expression",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_multithreading_AvoidThreadGroup",
  "title" : "Avoid using java.lang.ThreadGroup; it is not thread safe",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_FinalizeOnlyCallsSuperFinalize",
  "title" : "Finalize should do something besides just calling super.finalize()",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_performance_BigIntegerInstantiation",
  "title" : "Don't create instances of already existing BigInteger and BigDecimal (ZERO, ONE, TEN)"
}, {
  "patternId" : "category_java_errorprone_UnusedNullCheckInEquals",
  "title" : "Invoke equals() on the object you''ve already ensured is not null",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_bestpractices_UseAssertTrueInsteadOfAssertEquals",
  "title" : "Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_design_AvoidDeeplyNestedIfStmts",
  "title" : "Deeply nested if..then statements are hard to read"
}, {
  "patternId" : "category_java_bestpractices_ReplaceEnumerationWithIterator",
  "title" : "Consider replacing this Enumeration with the newer java.util.Iterator",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_AvoidCatchingThrowable",
  "title" : "A catch statement should never catch throwable since it includes errors."
}, {
  "patternId" : "category_vm_bestpractices_AvoidReassigningParameters",
  "title" : "Avoid reassigning macro parameters such as ''{0}''"
}, {
  "patternId" : "category_apex_errorprone_EmptyWhileStmt",
  "title" : "Avoid empty 'while' statements",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_design_FinalFieldCouldBeStatic",
  "title" : "This final field could be made static",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_bestpractices_UnusedPrivateMethod",
  "title" : "Avoid unused private methods such as ''{0}''."
}, {
  "patternId" : "category_ecmascript_codestyle_IfStmtsMustUseBraces",
  "title" : "Avoid using if statements without curly braces",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_plsql_bestpractices_TomKytesDespair",
  "title" : "WHEN OTHERS THEN NULL - when you do this, Tom Kyte cries",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_codestyle_BooleanGetMethodName",
  "title" : "A 'getX()' method which returns a boolean should be named 'isX()'",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  }, {
    "name" : "checkParameterizedMethods",
    "description" : "Check parameterized methods"
  } ]
}, {
  "patternId" : "category_java_bestpractices_AvoidReassigningParameters",
  "title" : "Avoid reassigning parameters such as ''{0}''"
}, {
  "patternId" : "category_java_errorprone_SuspiciousEqualsMethodName",
  "title" : "The method name and parameter number are suspiciously close to equals(Object)",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_apex_design_NcssMethodCount",
  "title" : "The method ''{0}()'' has an NCSS line count of {1}"
}, {
  "patternId" : "category_apex_codestyle_VariableNamingConventions",
  "title" : "{0} variable {1} should begin with {2}"
}, {
  "patternId" : "category_java_design_SingularField",
  "title" : "Perhaps ''{0}'' could be replaced by a local variable."
}, {
  "patternId" : "category_vm_design_ExcessiveTemplateLength",
  "title" : "Template is too long",
  "parameters" : [ {
    "name" : "minimum",
    "description" : "minimum"
  } ]
}, {
  "patternId" : "category_plsql_design_ExcessivePackageBodyLength",
  "title" : "Avoid really long Object Type and Package bodies ({0} lines found)."
}, {
  "patternId" : "category_java_bestpractices_DefaultLabelNotLastInSwitchStmt",
  "title" : "The default label should be the last label in a switch statement",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_codestyle_MIsLeadingVariableName",
  "title" : "Avoid naming non-fields with the prefix 'm_'",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_plsql_design_ExcessiveTypeLength",
  "title" : "Avoid really long Object Type specifications ({0} lines found)."
}, {
  "patternId" : "category_java_codestyle_DuplicateImports",
  "title" : "Avoid duplicate imports such as ''{0}''"
}, {
  "patternId" : "category_java_errorprone_SuspiciousHashcodeMethodName",
  "title" : "The method name and return type are suspiciously close to hashCode()"
}, {
  "patternId" : "category_java_bestpractices_UseAssertNullInsteadOfAssertTrue",
  "title" : "Use assertNull(x) instead of assertTrue(x==null), or assertNotNull(x) vs assertFalse(x==null)",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_bestpractices_JUnit4TestShouldUseTestAnnotation",
  "title" : "JUnit 4 tests that execute tests should use the @Test annotation",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_codestyle_CommentDefaultAccessModifier",
  "title" : "Missing commented default access modifier",
  "parameters" : [ {
    "name" : "regex",
    "description" : "regex"
  } ]
}, {
  "patternId" : "category_java_bestpractices_JUnit4TestShouldUseBeforeAnnotation",
  "title" : "JUnit 4 tests that set up tests should use the @Before annotation",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_codestyle_UnnecessaryLocalBeforeReturn",
  "title" : "Consider simply returning the value vs storing it in local variable ''{0}''"
}, {
  "patternId" : "category_jsp_design_NoInlineScript",
  "title" : "Avoiding inlining HTML script content",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_documentation_CommentSize",
  "title" : "Comment is too large"
}, {
  "patternId" : "category_apex_security_ApexOpenRedirect",
  "title" : "Apex classes should safely redirect to a known location"
}, {
  "patternId" : "category_vm_design_NoInlineStyles",
  "title" : "Avoid inline styles",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_xsl_codestyle_UseConcatOnce",
  "title" : "The xpath concat() function accepts as many arguments as required, you may be able to factorize this expression",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_codestyle_MDBAndSessionBeanNamingConvention",
  "title" : "SessionBean or MessageBean should be suffixed by Bean",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_design_ClassWithOnlyPrivateConstructorsShouldBeFinal",
  "title" : "A class which only has private constructors should be final",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_UseProperClassLoader",
  "title" : "In J2EE, getClassLoader() might not work as expected.  Use Thread.currentThread().getContextClassLoader() instead.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_jsp_design_NoLongScripts",
  "title" : "Avoid having long scripts (e.g. Javascript) inside a JSP file.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_design_ExcessiveParameterList",
  "title" : "Avoid long parameter lists."
}, {
  "patternId" : "category_jsp_design_NoInlineStyleInformation",
  "title" : "Avoid having style information in JSP files."
}, {
  "patternId" : "category_apex_security_ApexInsecureEndpoint",
  "title" : "Apex callouts should use encrypted communication channels"
}, {
  "patternId" : "category_java_errorprone_DontImportSun",
  "title" : "Avoid importing anything from the 'sun.*' packages"
}, {
  "patternId" : "category_java_errorprone_EmptyFinalizer",
  "title" : "Avoid empty finalize methods",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_FinalizeOverloaded",
  "title" : "Finalize methods should not be overloaded",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_UnnecessaryBooleanAssertion",
  "title" : "assertTrue(true) or similar statements are unnecessary",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_codestyle_GenericsNaming",
  "title" : "Generics names should be a one letter long and upper case.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_plsql_design_CyclomaticComplexity",
  "title" : "The {0} ''{1}'' has a Cyclomatic Complexity of {2}."
}, {
  "patternId" : "category_java_errorprone_DoNotThrowExceptionInFinally",
  "title" : "A throw statement in a finally block makes the control flow hard to understand.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_bestpractices_UnusedImports",
  "title" : "Avoid unused imports such as ''{0}''"
}, {
  "patternId" : "category_java_errorprone_EmptyInitializer",
  "title" : "Empty initializer was found",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_design_SwitchDensity",
  "title" : "A high ratio of statements to labels in a switch statement.  Consider refactoring."
}, {
  "patternId" : "category_plsql_design_NcssObjectCount",
  "title" : "The Oracle object has an NCSS line count of {0}"
}, {
  "patternId" : "category_java_performance_ShortInstantiation",
  "title" : "Avoid instantiating Short objects. Call Short.valueOf() instead",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_UseLocaleWithCaseConversions",
  "title" : "When doing a String.toLowerCase()/toUpperCase() call, use a Locale",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_vm_design_NoInlineJavaScript",
  "title" : "Avoid inline JavaScript"
}, {
  "patternId" : "category_java_performance_AvoidFileStream",
  "title" : "Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_apex_performance_AvoidSoqlInLoops",
  "title" : "Avoid Soql queries inside loops"
}, {
  "patternId" : "category_java_errorprone_AvoidMultipleUnaryOperators",
  "title" : "Using multiple unary operators may be a bug, and/or is confusing."
}, {
  "patternId" : "category_java_performance_LongInstantiation",
  "title" : "Avoid instantiating Long objects.Call Long.valueOf() instead",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_design_CouplingBetweenObjects",
  "title" : "High amount of different objects as members denotes a high coupling"
}, {
  "patternId" : "category_java_errorprone_StringBufferInstantiationWithChar",
  "title" : "Do not instantiate a StringBuffer or StringBuilder with a char",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_AvoidAccessibilityAlteration",
  "title" : "You should not modify visibility of class or methods using getDeclaredConstructors(), getDeclaredConstructor(Class[]), setAccessible() or PrivilegedAction.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_codestyle_OnlyOneReturn",
  "title" : "A method should have only one exit point, and that should be the last statement in the method"
}, {
  "patternId" : "category_java_errorprone_StaticEJBFieldShouldBeFinal",
  "title" : "EJB's shouldn't have non-final static fields",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_design_ExceptionAsFlowControl",
  "title" : "Avoid using exceptions as flow control."
}, {
  "patternId" : "category_java_errorprone_EmptyWhileStmt",
  "title" : "Avoid empty 'while' statements",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_DontUseFloatTypeForLoopIndices",
  "title" : "Don't use floating point for loop indices. If you must use floating point, use double.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_codestyle_VariableNamingConventions",
  "title" : "{0} variable {1} should begin with {2}"
}, {
  "patternId" : "category_java_performance_IntegerInstantiation",
  "title" : "Avoid instantiating Integer objects. Call Integer.valueOf() instead.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_performance_UselessStringValueOf",
  "title" : "No need to call String.valueOf to append to a string."
}, {
  "patternId" : "category_java_codestyle_TooManyStaticImports",
  "title" : "Too many static imports may lead to messy code",
  "parameters" : [ {
    "name" : "maximumStaticImports",
    "description" : "All static imports can be disallowed by setting this to 0"
  }, {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_vm_errorprone_EmptyForeachStmt",
  "title" : "Avoid empty foreach loops"
}, {
  "patternId" : "category_java_errorprone_ReturnFromFinallyBlock",
  "title" : "Avoid returning from a finally block",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_codestyle_PackageCase",
  "title" : "Package name contains upper case characters",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_documentation_UncommentedEmptyMethodBody",
  "title" : "Document empty method body",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_ecmascript_codestyle_AssignmentInOperand",
  "title" : "Avoid assignments in operands",
  "parameters" : [ {
    "name" : "allowTernary",
    "description" : "Allow assignment within the conditional expression of a ternary operator"
  }, {
    "name" : "allowFor",
    "description" : "Allow assignment within the conditional expression of a for statement"
  }, {
    "name" : "allowIf",
    "description" : "Allow assignment within the conditional expression of an if statement"
  }, {
    "name" : "allowWhile",
    "description" : "Allow assignment within the conditional expression of a while statement"
  }, {
    "name" : "allowIncrementDecrement",
    "description" : "Allow increment or decrement operators within the conditional expression of an if, for, or while statement"
  }, {
    "name" : "xpath",
    "description" : "xpath"
  }, {
    "name" : "allowTernaryResults",
    "description" : "Allow assignment within the result expressions of a ternary operator"
  } ]
}, {
  "patternId" : "category_java_performance_ByteInstantiation",
  "title" : "Avoid instantiating Byte objects. Call Byte.valueOf() instead",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_ImportFromSamePackage",
  "title" : "No need to import a type that lives in the same package"
}, {
  "patternId" : "category_ecmascript_codestyle_WhileLoopsMustUseBraces",
  "title" : "Avoid using 'while' statements without curly braces",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_apex_security_ApexCRUDViolation",
  "title" : "Validate CRUD permission before SOQL/DML operation"
}, {
  "patternId" : "category_java_codestyle_LongVariable",
  "title" : "Avoid excessively long variable names like {0}",
  "parameters" : [ {
    "name" : "minimum",
    "description" : "The variable length reporting threshold"
  }, {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_codestyle_UnnecessaryReturn",
  "title" : "Avoid unnecessary return statements"
}, {
  "patternId" : "category_apex_codestyle_IfElseStmtsMustUseBraces",
  "title" : "Avoid using 'if...else' statements without curly braces",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_bestpractices_UnusedFormalParameter",
  "title" : "Avoid unused {0} parameters such as ''{1}''."
}, {
  "patternId" : "category_java_bestpractices_AccessorMethodGeneration",
  "title" : "Avoid autogenerated methods to access private fields and methods of inner / outer classes"
}, {
  "patternId" : "category_java_performance_UnnecessaryWrapperObjectCreation",
  "title" : "Unnecessary wrapper object creation"
}, {
  "patternId" : "category_java_performance_ConsecutiveLiteralAppends",
  "title" : "StringBuffer (or StringBuilder).append is called {0} consecutive times with literal Strings. Use a single append with a single combined String."
}, {
  "patternId" : "category_apex_codestyle_ClassNamingConventions",
  "title" : "Class names should begin with an uppercase character"
}, {
  "patternId" : "category_java_errorprone_UnnecessaryConversionTemporary",
  "title" : "Avoid unnecessary temporaries when converting primitives to Strings"
}, {
  "patternId" : "category_java_multithreading_AvoidSynchronizedAtMethodLevel",
  "title" : "Use block level rather than method level synchronization",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_bestpractices_AccessorClassGeneration",
  "title" : "Avoid instantiation through private constructors from outside of the constructor's class."
}, {
  "patternId" : "category_java_errorprone_MoreThanOneLogger",
  "title" : "Class contains more than one logger."
}, {
  "patternId" : "category_java_design_DataClass",
  "title" : "The class ''{0}'' is suspected to be a Data Class (WOC={1}, NOPA={2}, NOAM={3}, WMC={4})"
}, {
  "patternId" : "category_java_codestyle_AvoidUsingNativeCode",
  "title" : "The use of native code is not recommended.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_bestpractices_UnusedLocalVariable",
  "title" : "Avoid unused local variables such as ''{0}''."
}, {
  "patternId" : "category_java_bestpractices_UnusedPrivateField",
  "title" : "Avoid unused private fields such as ''{0}''."
}, {
  "patternId" : "category_apex_design_ExcessivePublicCount",
  "title" : "This class has a bunch of public methods and attributes"
}, {
  "patternId" : "category_java_errorprone_CallSuperLast",
  "title" : "super should be called at the end of the method",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_EmptyFinallyBlock",
  "title" : "Avoid empty finally blocks",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_CompareObjectsWithEquals",
  "title" : "Use equals() to compare object references."
}, {
  "patternId" : "category_apex_security_ApexSOQLInjection",
  "title" : "Avoid untrusted/unescaped variables in DML query"
}, {
  "patternId" : "category_plsql_design_NcssMethodCount",
  "title" : "The method {0}() has an NCSS line count of {1}"
}, {
  "patternId" : "category_ecmascript_codestyle_UnnecessaryBlock",
  "title" : "Unnecessary block.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_codestyle_ForLoopShouldBeWhileLoop",
  "title" : "This for loop could be simplified to a while loop",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_apex_errorprone_EmptyTryOrFinallyBlock",
  "title" : "Avoid empty try or finally blocks",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_design_SimplifyBooleanAssertion",
  "title" : "assertTrue(!expr) can be replaced by assertFalse(expr)",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_design_AbstractClassWithoutAnyMethod",
  "title" : "No abstract method which means that the keyword is most likely used to prevent instantiation. Use a private or protected constructor instead.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_bestpractices_UseVarargs",
  "title" : "Consider using varargs for methods or constructors which take an array the last parameter.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_multithreading_DoNotUseThreads",
  "title" : "To be compliant to J2EE, a webapp should not use any thread.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_codestyle_AvoidProtectedMethodInFinalClassNotExtending",
  "title" : "Avoid protected methods in a final class that doesn't extend anything other than Object.  Change to private or package access.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_EmptyTryBlock",
  "title" : "Avoid empty try blocks",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_bestpractices_JUnit4SuitesShouldUseSuiteAnnotation",
  "title" : "JUnit 4 indicates test suites via annotations, not the suite method.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_EmptySwitchStatements",
  "title" : "Avoid empty switch statements",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_jsp_bestpractices_NoHtmlComments",
  "title" : "Use JSP comments instead of HTML comments",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_xsl_performance_AvoidAxisNavigation",
  "title" : "Axis navigation has the largest impact when writing an XPath query.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  }, {
    "name" : "checkSelfDescendantAbreviation",
    "description" : "descendant::self abreviation, '//', will also trigger this rule."
  } ]
}, {
  "patternId" : "category_java_errorprone_UnnecessaryCaseChange",
  "title" : "Using equalsIgnoreCase() is cleaner than using toUpperCase/toLowerCase().equals()."
}, {
  "patternId" : "category_ecmascript_codestyle_IfElseStmtsMustUseBraces",
  "title" : "Avoid using 'if...else' statements without curly braces",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_ProperCloneImplementation",
  "title" : "Object clone() should be implemented with super.clone()",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_AvoidEnumAsIdentifier",
  "title" : "Avoid using enum as an identifier; it's a reserved word in JDK 1.5",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_design_LawOfDemeter",
  "title" : "Potential violation of Law of Demeter"
}, {
  "patternId" : "category_java_errorprone_OverrideBothEqualsAndHashcode",
  "title" : "Ensure you override both equals() and hashCode()"
}, {
  "patternId" : "category_ecmascript_errorprone_InnaccurateNumericLiteral",
  "title" : "The numeric literal ''{0}'' will have at different value at runtime.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_bestpractices_SwitchStmtsShouldHaveDefault",
  "title" : "Switch statements should have a default label",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_performance_AppendCharacterWithChar",
  "title" : "Avoid appending characters as strings in StringBuffer.append."
}, {
  "patternId" : "category_apex_security_ApexSharingViolations",
  "title" : "Apex classes should declare a sharing model if DML or SOQL/SOSL is used"
}, {
  "patternId" : "category_apex_bestpractices_AvoidGlobalModifier",
  "title" : "Avoid using global modifier"
}, {
  "patternId" : "category_apex_design_ExcessiveParameterList",
  "title" : "Avoid long parameter lists."
}, {
  "patternId" : "category_java_design_CollapsibleIfStatements",
  "title" : "These nested if statements could be combined",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_apex_design_NcssConstructorCount",
  "title" : "The constructor has an NCSS line count of {0}"
}, {
  "patternId" : "category_java_errorprone_UnconditionalIfStatement",
  "title" : "Do not use 'if' statements that are always true or always false",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_apex_codestyle_WhileLoopsMustUseBraces",
  "title" : "Avoid using 'while' statements without curly braces",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_CloneThrowsCloneNotSupportedException",
  "title" : "clone() method should throw CloneNotSupportedException",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_pom_errorprone_InvalidDependencyTypes",
  "title" : "By default, Maven only recognizes the following types: pom, jar, maven-plugin, ejb, war, ear, rar, par.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_codestyle_AbstractNaming",
  "title" : "Abstract classes should be named 'AbstractXXX'",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  }, {
    "name" : "strict",
    "description" : "Also flag classes, that are named Abstract, but are not abstract."
  } ]
}, {
  "patternId" : "category_java_errorprone_AvoidCallingFinalize",
  "title" : "Avoid calling finalize() explicitly"
}, {
  "patternId" : "category_apex_errorprone_MethodWithSameNameAsEnclosingClass",
  "title" : "Classes should not have non-constructor methods with the same name as the class"
}, {
  "patternId" : "category_java_errorprone_MethodWithSameNameAsEnclosingClass",
  "title" : "Classes should not have non-constructor methods with the same name as the class"
}, {
  "patternId" : "category_java_design_DoNotExtendJavaLangError",
  "title" : "Exceptions should not extend java.lang.Error",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_multithreading_DontCallThreadRun",
  "title" : "Don't call Thread.run() explicitly, use Thread.start()",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_apex_security_ApexSuggestUsingNamedCred",
  "title" : "Suggest named credentials for authentication"
}, {
  "patternId" : "category_java_performance_InefficientEmptyStringCheck",
  "title" : "String.trim().length()==0 is an inefficient way to validate an empty String."
}, {
  "patternId" : "category_java_errorprone_EmptySynchronizedBlock",
  "title" : "Avoid empty synchronized blocks",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_codestyle_AvoidFinalLocalVariable",
  "title" : "Avoid using final local variables, turn them into fields",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_design_ExcessiveMethodLength",
  "title" : "Avoid really long methods."
}, {
  "patternId" : "category_apex_design_StdCyclomaticComplexity",
  "title" : "The {0} ''{1}'' has a Standard Cyclomatic Complexity of {2}."
}, {
  "patternId" : "category_java_performance_RedundantFieldInitializer",
  "title" : "Avoid using redundant field initializer for ''${variableName}''"
}, {
  "patternId" : "category_java_bestpractices_JUnitAssertionsShouldIncludeMessage",
  "title" : "JUnit assertions should include a message"
}, {
  "patternId" : "category_java_multithreading_NonThreadSafeSingleton",
  "title" : "Singleton is not thread safe"
}, {
  "patternId" : "category_java_errorprone_MisplacedNullCheck",
  "title" : "The null check here is misplaced; if the variable is null there will be a NullPointerException",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_apex_errorprone_AvoidHardcodingId",
  "title" : "Hardcoding Id's is bound to break when changing environments."
}, {
  "patternId" : "category_java_performance_InsufficientStringBufferDeclaration",
  "title" : "StringBuffer constructor is initialized with size {0}, but has at least {1} characters appended."
}, {
  "patternId" : "category_java_codestyle_ShortMethodName",
  "title" : "Avoid using short method names",
  "parameters" : [ {
    "name" : "minimum",
    "description" : "Number of characters that are required as a minimum for a method name."
  }, {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_bestpractices_UseCollectionIsEmpty",
  "title" : "Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()"
}, {
  "patternId" : "category_java_design_LogicInversion",
  "title" : "Use opposite operator instead of the logic complement operator.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_codestyle_CallSuperInConstructor",
  "title" : "It is a good practice to call super() in a constructor",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_performance_SimplifyStartsWith",
  "title" : "This call to String.startsWith can be rewritten using String.charAt(0)",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_codestyle_SuspiciousConstantFieldName",
  "title" : "The field name indicates a constant but its modifiers do not",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_codestyle_AtLeastOneConstructor",
  "title" : "Each class should declare at least one constructor",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_performance_UseStringBufferForStringAppends",
  "title" : "Prefer StringBuffer over += for concatenating strings"
}, {
  "patternId" : "category_java_design_CyclomaticComplexity",
  "title" : "The {0} ''{1}'' has a{2} cyclomatic complexity of {3}."
}, {
  "patternId" : "category_java_design_UseUtilityClass",
  "title" : "All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning."
}, {
  "patternId" : "category_java_errorprone_NonCaseLabelInSwitchStatement",
  "title" : "A non-case label was present in a switch statement",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_pom_errorprone_ProjectVersionAsDependencyVersion",
  "title" : "Do not use project's version to express a dependency's version.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_EmptyStatementNotInLoop",
  "title" : "An empty statement (semicolon) not part of a loop",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_ecmascript_bestpractices_GlobalVariable",
  "title" : "Avoid using global variables",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_plsql_design_NPathComplexity",
  "title" : "The method {0}() has an NPath complexity of {1}"
}, {
  "patternId" : "category_java_design_ImmutableField",
  "title" : "Private field ''{0}'' could be made final; it is only initialized in the declaration or constructor."
}, {
  "patternId" : "category_java_errorprone_ReturnEmptyArrayRatherThanNull",
  "title" : "Return an empty array rather than 'null'.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_InvalidSlf4jMessageFormat",
  "title" : "Invalid message format"
}, {
  "patternId" : "category_java_errorprone_MissingBreakInSwitch",
  "title" : "A switch statement does not contain a break",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_codestyle_RemoteSessionInterfaceNamingConvention",
  "title" : "Remote Home interface of a Session EJB should be suffixed by 'Home'",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_SingletonClassReturningNewInstance",
  "title" : "getInstance method always creates a new object and hence does not comply to Singleton Design Pattern behaviour. Please review"
}, {
  "patternId" : "category_java_design_AvoidCatchingGenericException",
  "title" : "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_codestyle_DontImportJavaLang",
  "title" : "Avoid importing anything from the package 'java.lang'"
}, {
  "patternId" : "category_jsp_security_IframeMissingSrcAttribute",
  "title" : "IFrames must have a src attribute.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_bestpractices_OneDeclarationPerLine",
  "title" : "Use one line for each declaration, it enhances code readability.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  }, {
    "name" : "strictMode",
    "description" : "If true, mark combined declaration even if the declarations are on separate lines."
  } ]
}, {
  "patternId" : "category_java_errorprone_BadComparison",
  "title" : "Avoid equality comparisons with Double.NaN",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_ecmascript_codestyle_UnreachableCode",
  "title" : "A ''return'', ''break'', ''continue'', or ''throw'' statement should be the last in a block.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_performance_AvoidArrayLoops",
  "title" : "System.arraycopy is more efficient",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_performance_StringToString",
  "title" : "Avoid calling toString() on String objects; this is unnecessary."
}, {
  "patternId" : "category_java_errorprone_InstantiationToGetClass",
  "title" : "Avoid instantiating an object just to call getClass() on it; use the .class public member instead",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_design_TooManyFields",
  "title" : "Too many fields"
}, {
  "patternId" : "category_java_design_TooManyMethods",
  "title" : "This class has too many methods, consider refactoring it.",
  "parameters" : [ {
    "name" : "maxmethods",
    "description" : "The method count reporting threshold"
  }, {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_codestyle_AvoidProtectedFieldInFinalClass",
  "title" : "Avoid protected fields in a final class.  Change to private or package access.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_bestpractices_ArrayIsStoredDirectly",
  "title" : "The user-supplied array ''{0}'' is stored directly."
}, {
  "patternId" : "category_apex_codestyle_ForLoopsMustUseBraces",
  "title" : "Avoid using 'for' statements without curly braces",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_ProperLogger",
  "title" : "Logger should be defined private static final and have the correct class",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  }, {
    "name" : "staticLoggerName",
    "description" : "Name of the static Logger variable"
  } ]
}, {
  "patternId" : "category_apex_security_ApexXSSFromEscapeFalse",
  "title" : "Apex classes should escape Strings in error messages"
}, {
  "patternId" : "category_apex_design_TooManyFields",
  "title" : "Too many fields"
}, {
  "patternId" : "category_jsp_bestpractices_NoJspForward",
  "title" : "Do not do a forward from within a JSP file.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_codestyle_LocalHomeNamingConvention",
  "title" : "The Local Home interface of a Session EJB should be suffixed by 'LocalHome'",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_multithreading_UnsynchronizedStaticDateFormatter",
  "title" : "Static DateFormatter objects should be accessed in a synchronized manner"
}, {
  "patternId" : "category_java_codestyle_ConfusingTernary",
  "title" : "Avoid if (x != y) ..; else ..;"
}, {
  "patternId" : "category_java_errorprone_AvoidLosingExceptionInformation",
  "title" : "Avoid statements in a catch block that invoke accessors on the exception without using the information",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_codestyle_UselessQualifiedThis",
  "title" : "Useless qualified this usage in the same class.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_TestClassWithoutTestCases",
  "title" : "This class name ends with 'Test' but contains no test cases"
}, {
  "patternId" : "category_java_codestyle_NoPackage",
  "title" : "All classes and interfaces must belong to a named package",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_AvoidDecimalLiteralsInBigDecimalConstructor",
  "title" : "Avoid creating BigDecimal with a decimal (float/double) literal. Use a String literal",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_bestpractices_GuardLogStatement",
  "title" : "There is log block not surrounded by if"
}, {
  "patternId" : "category_apex_design_ExcessiveClassLength",
  "title" : "Avoid really long classes."
}, {
  "patternId" : "category_java_errorprone_ClassCastExceptionWithToArray",
  "title" : "This usage of the Collection.toArray() method will throw a ClassCastException.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_DoNotExtendJavaLangThrowable",
  "title" : "Exceptions should not extend java.lang.Throwable",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_codestyle_WhileLoopsMustUseBraces",
  "title" : "Avoid using 'while' statements without curly braces",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_codestyle_MethodArgumentCouldBeFinal",
  "title" : "Parameter ''{0}'' is not assigned and could be declared final"
}, {
  "patternId" : "category_plsql_design_TooManyMethods",
  "title" : "This object has too many methods, consider refactoring it.",
  "parameters" : [ {
    "name" : "maxmethods",
    "description" : "The method count reporting threshold"
  }, {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_design_ExcessiveImports",
  "title" : "A high number of imports can indicate a high degree of coupling within an object."
}, {
  "patternId" : "category_java_codestyle_AvoidPrefixingMethodParameters",
  "title" : "Avoid prefixing parameters by in, out or inOut. Uses Javadoc to document this behavior.",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_performance_UseArraysAsList",
  "title" : "Use asList instead of tight loops",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_design_ExcessivePublicCount",
  "title" : "This class has a bunch of public methods and attributes"
}, {
  "patternId" : "category_apex_errorprone_AvoidDirectAccessTriggerMap",
  "title" : "Avoid directly accessing Trigger.old and Trigger.new",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_errorprone_EmptyIfStmt",
  "title" : "Avoid empty 'if' statements",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_codestyle_UnnecessaryModifier",
  "title" : "Avoid modifiers which are implied by the context"
}, {
  "patternId" : "category_plsql_design_ExcessiveParameterList",
  "title" : "Avoid long parameter lists."
}, {
  "patternId" : "category_apex_errorprone_EmptyCatchBlock",
  "title" : "Avoid empty catch blocks",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_multithreading_UseNotifyAllInsteadOfNotify",
  "title" : "Call Thread.notifyAll() rather than Thread.notify()",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_design_GodClass",
  "title" : "Possible God Class (WMC={0}, ATFD={2}, TCC={1})"
}, {
  "patternId" : "category_apex_errorprone_EmptyIfStmt",
  "title" : "Avoid empty 'if' statements",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_bestpractices_JUnit4TestShouldUseAfterAnnotation",
  "title" : "JUnit 4 tests that clean up tests should use the @After annotation",
  "parameters" : [ {
    "name" : "xpath",
    "description" : "xpath"
  } ]
}, {
  "patternId" : "category_java_design_LoosePackageCoupling",
  "title" : "Use of ''{0}'' outside of package hierarchy ''{1}'' is not recommended; use recommended classes instead"
} ]